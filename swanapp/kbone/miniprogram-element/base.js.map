{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"miniprogram-render\"","webpack:///./src/util/component.js","webpack:///./src/base.js","webpack:///./src/util/tool.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","mp","cache","tool","$$adapter","dealWithDevToolsEvt","evt","detail","undefined","markerId","controlId","longitude","latitude","dealWithObjectString","JSON","parse","err","dealWithBoolValue","domNode","attrName","defaultIsTrue","getAttribute","dealWithNumber","defaultValue","parseFloat","isNaN","dealWithEvt","currentTarget","dataset","privateNodeId","target","wxComponentMap","wxCompName","properties","src","completeURL","handles","this","callSingleEvent","getDomNodeFromEvt","$$setAttributeWithoutUpdate","canBeUserChanged","scrollTop","scrollLeft","_oldValues","scrollIntoView","callSimpleEvent","setAttribute","swiper","current","view","icon","progress","parseValue","text","button","editor","form","_formId","formId","INPUT","type","placeholder","disabled","callEvent","_inputOldValue","focus","window","getWindow","pageId","checked","otherDomNodes","document","querySelectorAll","otherDomNode","indexOf","picker","tagName","options","map","item","label","split","selectedIndex","parseInt","$$resetOptions","slider","switch","TEXTAREA","_textareaOldValue","navigator","camera","image","Array","isArray","length","url","VIDEO","controls","autoplay","loop","muted","poster","currentTime","buffered","causedBy","centerLocation","scale","rotate","skew","CANVAS","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","ad","capture","catch","animation","SELECT","wxSubComponentMap","x","y","scaleValue","wxComponentKeys","keys","wxCompNameMap","wxCompData","wxCompHandles","forEach","assign","_","component","Event","EventTarget","USE_TEMPLATE","DOM_SUB_TREE_LEVEL","isOriginalSetData","version","wx","getSystemInfoSync","SDKVersion","behaviors","compareVersion","push","console","warn","Behavior","inCover","Boolean","data","wxCustomCompName","childNodes","config","getConfig","domSubTreeLevel","optimization","setDataMode","nodeId","privatePageId","getNode","getDocument","onChildNodesUpdate","throttle","$$clearEvent","$$namespace","addEventListener","onSelfNodeUpdate","init","filterNodes","dealWithLeafAndSimple","_wxComponent","setData","methods","behavior","checkComponentAttr","checkDiffChildNodes","destData","count","newChildNodes","getDiffChildNodes","newData","eventName","$$trigger","event","timeStamp","Date","now","touches","changedTouches","eventPhase","AT_TARGET","$$extra","extra","$$process","bubbles","miniprogramEvent","isCapture","setTimeout","$$preventDefault","formAttr","getElementById","findParentNode","inputList","textareaList","switchList","filter","sliderList","pickerList","pickerViewList","formData","concat","$$from","forValue","targetDomNode","querySelector","checkEventAccessDomNode","$$nodeId","performance","clickEvt","runtime","disableMpEvent","_needCallTap","needCallTap","parentNode","$$hasEventHandler","$$checkEvent","originNodeId","ELEMENT_DIFF_KEYS","TEXT_NODE_DIFF_KEYS","NEET_SPLIT_CLASS_STYLE_FROM_CUSTOM_ELEMENT","RELATION_PARENT","RELATION_CHILD","NEET_RENDER_TO_CUSTOM_ELEMENT","isEqual","a","b","notStrict","isAArray","isBArray","len","aKeys","bKeys","oldData","extraClass","attrs","newValue","oldValues","isOldValuesChanged","forceUpdate","newId","id","newClass","className","newStyle","style","cssText","newHidden","hidden","level","index","findIndex","childNode","child","domInfo","$$domInfo","slot","compName","isImage","webp","lazyLoad","showMenuByLongpress","templateName","isTagNameSupport","useTemplate","hasChildren","relationIndex","copyChildNode","grandchild","slots","slotDomInfo","hasSlots","touchStart","touchMove","touchEnd","touchCancel","content","textContent","isLeaf","children","join","isSimple","oldChildNodes","newChild","oldChild","oldValue","objectKeys","objectKey","oldItemValue","newGrandChildNodes","oldGrandChildNodes","newItem","oldItem","prefix","isExtra","newType","newIsArray","oldIsArray","newItemType","oldItemType","newIsNode","oldIsNode","dataPath","currentDomNode","newKeys","oldKeys","originChildNode","dest","ownerDocument","body","checkParentNode","toLowerCase","v1","v2","Math","max","num1","num2","instance"],"mappings":"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","file":"base.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"miniprogram-render\");","const mp = require('miniprogram-render')\n\nconst {\n    cache,\n    tool,\n} = mp.$$adapter\n\n/**\n * 兼容开发者工具 bug\n */\nfunction dealWithDevToolsEvt(evt) {\n    if (!evt.detail) evt.detail = {}\n    if (evt.markerId !== undefined) evt.detail.markerId = evt.markerId\n    if (evt.controlId !== undefined) evt.detail.controlId = evt.controlId\n    if (evt.name !== undefined) evt.detail.name = evt.name\n    if (evt.longitude !== undefined) evt.detail.longitude = evt.longitude\n    if (evt.latitude !== undefined) evt.detail.latitude = evt.latitude\n}\n\n/**\n * 兼容 react\n */\nfunction dealWithObjectString(value) {\n    if (typeof value === 'string') {\n        // react 会直接将属性值转成字符串\n        try {\n            value = JSON.parse(value)\n        } catch (err) {\n            value = undefined\n        }\n    }\n\n    return value\n}\n\n/**\n * 处理布尔值\n */\nfunction dealWithBoolValue(domNode, attrName, defaultIsTrue) {\n    const value = domNode.getAttribute(attrName)\n    if (value === 'false') return false\n    if (defaultIsTrue && value === undefined) return true\n    return !!value\n}\n\n/**\n * 处理数值\n */\nfunction dealWithNumber(domNode, attrName, defaultValue) {\n    const value = parseFloat(domNode.getAttribute(attrName))\n    return !isNaN(value) ? value : defaultValue\n}\n\n/**\n * 兼容 canvas 相关 touch 事件，基础库没有提供 currentTarget 的问题\n */\nfunction dealWithEvt(evt) {\n    if (!evt.currentTarget || !evt.currentTarget.dataset.privateNodeId) {\n        // 取 target\n        evt.currentTarget = evt.currentTarget || {dataset: {}}\n        evt.currentTarget.dataset.privateNodeId = evt.target.dataset.privateNodeId\n    }\n}\n\nconst wxComponentMap = {\n    // 视图容器\n    'cover-image': {\n        wxCompName: 'cover-image',\n        properties: [{\n            name: 'src',\n            get(domNode) {\n                return domNode.src ? tool.completeURL(domNode.src, '', true) : ''\n            },\n        }],\n        handles: {\n            onCoverImageLoad(evt) {\n                this.callSingleEvent('load', evt)\n            },\n\n            onCoverImageError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    'cover-view': {\n        wxCompName: 'cover-view',\n        properties: [{\n            name: 'scrollTop',\n            get(domNode) {\n                return domNode.getAttribute('scroll-top')\n            },\n        }, {\n            // 是否需要强行开启 inCover\n            name: 'forceInCover',\n            get(domNode) {\n                // 地图自定义 callout\n                return domNode.getAttribute('marker-id') !== undefined\n            },\n        }, {\n            // 地图自定义 callout 相关属性\n            name: 'markerId',\n            get(domNode) {\n                return domNode.getAttribute('marker-id')\n            },\n        }],\n    },\n    'match-media': {\n        wxCompName: 'match-media',\n        properties: [{\n            name: 'minWidth',\n            get(domNode) {\n                return +domNode.getAttribute('min-width') || 0\n            },\n        }, {\n            name: 'maxWidth',\n            get(domNode) {\n                return +domNode.getAttribute('max-width') || 0\n            },\n        }, {\n            name: 'width',\n            get(domNode) {\n                return +domNode.getAttribute('width') || 0\n            },\n        }, {\n            name: 'minHeight',\n            get(domNode) {\n                return +domNode.getAttribute('min-height') || 0\n            },\n        }, {\n            name: 'maxHeight',\n            get(domNode) {\n                return +domNode.getAttribute('max-height') || 0\n            },\n        }, {\n            name: 'height',\n            get(domNode) {\n                return +domNode.getAttribute('height') || 0\n            },\n        }, {\n            name: 'orientation',\n            get(domNode) {\n                return domNode.getAttribute('orientation') || ''\n            },\n        }],\n    },\n    'movable-area': {\n        wxCompName: 'movable-area',\n        properties: [{\n            name: 'scaleArea',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'scale-area')\n            },\n        }],\n    },\n    'page-container': {\n        wxCompName: 'page-container',\n        properties: [{\n            name: 'show',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show')\n            },\n        }, {\n            name: 'duration',\n            get(domNode) {\n                return dealWithNumber(domNode, 'duration', 300)\n            },\n        }, {\n            name: 'zIndex',\n            get(domNode) {\n                return dealWithNumber(domNode, 'z-index', 100)\n            },\n        }, {\n            name: 'overlay',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'overlay', true)\n            },\n        }, {\n            name: 'position',\n            get(domNode) {\n                return domNode.getAttribute('position') || 'bottom'\n            },\n        }, {\n            name: 'round',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'round')\n            },\n        }, {\n            name: 'closeOnSlideDown',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'close-on-slideDown')\n            },\n        }, {\n            name: 'overlayStyle',\n            get(domNode) {\n                return domNode.getAttribute('overlay-style') || ''\n            },\n        }, {\n            name: 'customStyle',\n            get(domNode) {\n                return domNode.getAttribute('custom-style') || ''\n            },\n        }],\n        handles: {\n            onPageContainerBeforeenter(evt) {\n                this.callSingleEvent('beforeenter', evt)\n\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (domNode) domNode.$$setAttributeWithoutUpdate('show', true)\n            },\n\n            onPageContainerEnter(evt) {\n                this.callSingleEvent('enter', evt)\n            },\n\n            onPageContainerAfterenter(evt) {\n                this.callSingleEvent('afterenter', evt)\n            },\n\n            onPageContainerBeforeleave(evt) {\n                this.callSingleEvent('beforeleave', evt)\n\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (domNode) domNode.$$setAttributeWithoutUpdate('show', false)\n            },\n\n            onPageContainerLeave(evt) {\n                this.callSingleEvent('leave', evt)\n            },\n\n            onPageContainerAfterleave(evt) {\n                this.callSingleEvent('afterleave', evt)\n            },\n\n            onPageContainerClickoverlay(evt) {\n                this.callSingleEvent('clickoverlay', evt)\n            },\n        },\n    },\n    'scroll-view': {\n        wxCompName: 'scroll-view',\n        properties: [{\n            name: 'scrollX',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'scroll-x')\n            },\n        }, {\n            name: 'scrollY',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'scroll-y')\n            },\n        }, {\n            name: 'upperThreshold',\n            get(domNode) {\n                return domNode.getAttribute('upper-threshold') || '50'\n            },\n        }, {\n            name: 'lowerThreshold',\n            get(domNode) {\n                return domNode.getAttribute('lower-threshold') || '50'\n            },\n        }, {\n            name: 'scrollTop',\n            canBeUserChanged: true,\n            get(domNode) {\n                return domNode.getAttribute('scroll-top') || ''\n            },\n        }, {\n            name: 'scrollLeft',\n            canBeUserChanged: true,\n            get(domNode) {\n                return domNode.getAttribute('scroll-left') || ''\n            },\n        }, {\n            name: 'scrollWithAnimation',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'scroll-with-animation')\n            },\n        }, {\n            name: 'enableBackToTop',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-back-to-top')\n            },\n        }, {\n            name: 'enableFlex',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-flex')\n            },\n        }, {\n            name: 'scrollAnchoring',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'scroll-anchoring')\n            },\n        }, {\n            name: 'refresherEnabled',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'refresher-enabled')\n            },\n        }, {\n            name: 'refresherThreshold',\n            get(domNode) {\n                return domNode.getAttribute('refresher-threshold') || '45'\n            },\n        }, {\n            name: 'refresherDefaultStyle',\n            get(domNode) {\n                return domNode.getAttribute('refresher-default-style') || 'black'\n            },\n        }, {\n            name: 'refresherBackground',\n            get(domNode) {\n                return domNode.getAttribute('refresher-background') || '#FFF'\n            },\n        }, {\n            name: 'refresherTriggered',\n            get(domNode) {\n                const value = dealWithBoolValue(domNode, 'refresher-triggered')\n\n                // 如果在禁止下拉刷新时设为 true，那么在重新开启下拉刷新时再设为 true 会被 diff 掉\n                const refresherEnabled = dealWithBoolValue(domNode, 'refresher-enabled')\n                if (!refresherEnabled && value) {\n                    domNode.$$setAttributeWithoutUpdate('refresher-triggered', false)\n                    return false\n                }\n\n                return value\n            },\n        }],\n        handles: {\n            onScrollViewScrolltoupper(evt) {\n                this.callSingleEvent('scrolltoupper', evt)\n            },\n\n            onScrollViewScrolltolower(evt) {\n                this.callSingleEvent('scrolltolower', evt)\n            },\n\n            onScrollViewScroll(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('scroll-into-view', '')\n                domNode.$$setAttributeWithoutUpdate('scroll-top', evt.detail.scrollTop)\n                domNode.$$setAttributeWithoutUpdate('scroll-left', evt.detail.scrollLeft)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.scrollIntoView = ''\n                domNode._oldValues.scrollTop = evt.detail.scrollTop || ''\n                domNode._oldValues.scrollLeft = evt.detail.scrollLeft || ''\n\n                this.callSimpleEvent('scroll', evt)\n            },\n\n            onScrollViewRefresherPulling(evt) {\n                this.callSingleEvent('refresherpulling', evt)\n            },\n\n            onScrollViewRefresherRefresh(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (domNode) domNode.setAttribute('refresher-triggered', true)\n\n                this.callSingleEvent('refresherrefresh', evt)\n            },\n\n            onScrollViewRefresherRestore(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (domNode) domNode.setAttribute('refresher-triggered', false)\n\n                this.callSingleEvent('refresherrestore', evt)\n            },\n\n            onScrollViewRefresherAbort(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (domNode) domNode.setAttribute('refresher-triggered', false)\n\n                this.callSingleEvent('refresherabort', evt)\n            },\n\n        },\n    },\n    swiper: {\n        wxCompName: 'swiper',\n        properties: [{\n            name: 'indicatorDots',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'indicator-dots')\n            },\n        }, {\n            name: 'indicatorColor',\n            get(domNode) {\n                return domNode.getAttribute('indicator-color') || 'rgba(0, 0, 0, .3)'\n            },\n        }, {\n            name: 'indicatorActiveColor',\n            get(domNode) {\n                return domNode.getAttribute('indicator-active-color') || '#000000'\n            },\n        }, {\n            name: 'autoplay',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'autoplay')\n            },\n        }, {\n            name: 'current',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('current') || 0\n            },\n        }, {\n            name: 'interval',\n            get(domNode) {\n                return dealWithNumber(domNode, 'interval', 5000)\n            },\n        }, {\n            name: 'duration',\n            get(domNode) {\n                return dealWithNumber(domNode, 'duration', 500)\n            },\n        }, {\n            name: 'circular',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'circular')\n            },\n        }, {\n            name: 'vertical',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'vertical')\n            },\n        }, {\n            name: 'previousMargin',\n            get(domNode) {\n                return domNode.getAttribute('previous-margin') || '0px'\n            },\n        }, {\n            name: 'nextMargin',\n            get(domNode) {\n                return domNode.getAttribute('next-margin') || '0px'\n            },\n        }, {\n            name: 'snapToEdge',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'snap-to-edge')\n            },\n        }, {\n            name: 'displayMultipleItems',\n            get(domNode) {\n                return dealWithNumber(domNode, 'display-multiple-items', 1)\n            },\n        }, {\n            name: 'skipHiddenItemLayout',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'skip-hidden-item-layout')\n            },\n        }, {\n            name: 'easingFunction',\n            get(domNode) {\n                return domNode.getAttribute('easing-function') || 'default'\n            },\n        }],\n        handles: {\n            onSwiperChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('current', evt.detail.current)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.current = evt.detail.current\n\n                this.callSingleEvent('change', evt)\n            },\n\n            onSwiperTransition(evt) {\n                this.callSingleEvent('transition', evt)\n            },\n\n            onSwiperAnimationfinish(evt) {\n                this.callSingleEvent('animationfinish', evt)\n            },\n        },\n    },\n    view: {\n        wxCompName: 'view',\n        properties: [{\n            name: 'hoverClass',\n            get(domNode) {\n                return domNode.getAttribute('hover-class') || 'none'\n            },\n        }, {\n            name: 'hoverStopPropagation',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'hover-stop-propagation')\n            },\n        }, {\n            name: 'hoverStartTime',\n            get(domNode) {\n                return dealWithNumber(domNode, 'hover-start-time', 50)\n            },\n        }, {\n            name: 'hoverStayTime',\n            get(domNode) {\n                return dealWithNumber(domNode, 'hover-stay-time', 400)\n            },\n        }],\n    },\n    // 基础内容\n    icon: {\n        wxCompName: 'icon',\n        properties: [{\n            name: 'type',\n            get(domNode) {\n                return domNode.getAttribute('type') || ''\n            },\n        }, {\n            name: 'size',\n            get(domNode) {\n                return domNode.getAttribute('size') || '23'\n            },\n        }, {\n            name: 'color',\n            get(domNode) {\n                return domNode.getAttribute('color') || ''\n            },\n        }],\n    },\n    progress: {\n        wxCompName: 'progress',\n        properties: [{\n            name: 'percent',\n            get(domNode) {\n                return +domNode.getAttribute('percent') || 0\n            },\n        }, {\n            name: 'showInfo',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-info')\n            },\n        }, {\n            name: 'borderRadius',\n            get(domNode) {\n                return domNode.getAttribute('border-radius') || '0'\n            },\n        }, {\n            name: 'fontSize',\n            get(domNode) {\n                return domNode.getAttribute('font-size') || '16'\n            },\n        }, {\n            name: 'strokeWidth',\n            get(domNode) {\n                return domNode.getAttribute('stroke-width') || '6'\n            },\n        }, {\n            name: 'color',\n            get(domNode) {\n                return domNode.getAttribute('color') || '#09BB07'\n            },\n        }, {\n            name: 'activeColor',\n            get(domNode) {\n                return domNode.getAttribute('active-color') || '#09BB07'\n            },\n        }, {\n            name: 'backgroundColor',\n            get(domNode) {\n                return domNode.getAttribute('background-color') || '#EBEBEB'\n            },\n        }, {\n            name: 'active',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'active')\n            },\n        }, {\n            name: 'activeMode',\n            get(domNode) {\n                return domNode.getAttribute('active-mode') || 'backwards'\n            },\n        }, {\n            name: 'duration',\n            get(domNode) {\n                return dealWithNumber(domNode, 'duration', 30)\n            },\n        }],\n        handles: {\n            onProgressActiveEnd(evt) {\n                this.callSingleEvent('activeend', evt)\n            },\n        },\n    },\n    'rich-text': {\n        wxCompName: 'rich-text',\n        properties: [{\n            name: 'nodes',\n            get(domNode) {\n                const value = domNode.getAttribute('nodes')\n                const parseValue = dealWithObjectString(value)\n                return parseValue !== undefined ? parseValue : (value || [])\n            },\n        }, {\n            name: 'space',\n            get(domNode) {\n                return domNode.getAttribute('space') || ''\n            },\n        }],\n    },\n    text: {\n        wxCompName: 'text',\n        properties: [{\n            name: 'selectable',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'selectable')\n            },\n        }, {\n            name: 'space',\n            get(domNode) {\n                return domNode.getAttribute('space') || ''\n            },\n        }, {\n            name: 'decode',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'decode')\n            },\n        }],\n    },\n    // 表单组件\n    button: {\n        wxCompName: 'button',\n        properties: [{\n            name: 'size',\n            get(domNode) {\n                return domNode.getAttribute('size') || 'default'\n            },\n        }, {\n            name: 'type',\n            get(domNode) {\n                // 如果使用默认值 default，基础库中会补充 wx-button[type=default]，导致部分样式优先级处理有问题\n                return domNode.getAttribute('type') || undefined\n            },\n        }, {\n            name: 'plain',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'plain')\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'disabled')\n            },\n        }, {\n            name: 'loading',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'loading')\n            },\n        }, {\n            name: 'formType',\n            get(domNode) {\n                return domNode.getAttribute('form-type') || ''\n            },\n        }, {\n            name: 'openType',\n            get(domNode) {\n                return domNode.getAttribute('open-type') || ''\n            },\n        }, {\n            name: 'hoverClass',\n            get(domNode) {\n                return domNode.getAttribute('hover-class') || 'button-hover'\n            },\n        }, {\n            name: 'hoverStopPropagation',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'hover-stop-propagation')\n            },\n        }, {\n            name: 'hoverStartTime',\n            get(domNode) {\n                return dealWithNumber(domNode, 'hover-start-time', 20)\n            },\n        }, {\n            name: 'hoverStayTime',\n            get(domNode) {\n                return dealWithNumber(domNode, 'hover-stay-time', 70)\n            },\n        }, {\n            name: 'lang',\n            get(domNode) {\n                return domNode.getAttribute('lang') || 'en'\n            },\n        }, {\n            name: 'sessionFrom',\n            get(domNode) {\n                return domNode.getAttribute('session-from') || ''\n            },\n        }, {\n            name: 'sendMessageTitle',\n            get(domNode) {\n                return domNode.getAttribute('send-message-title') || ''\n            },\n        }, {\n            name: 'sendMessagePath',\n            get(domNode) {\n                return domNode.getAttribute('send-message-path') || ''\n            },\n        }, {\n            name: 'sendMessageImg',\n            get(domNode) {\n                return domNode.getAttribute('send-message-img') || ''\n            },\n        }, {\n            name: 'appParameter',\n            get(domNode) {\n                return domNode.getAttribute('app-parameter') || ''\n            },\n        }, {\n            name: 'showMessageCard',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-message-card')\n            },\n        }, {\n            name: 'businessId',\n            get(domNode) {\n                return domNode.getAttribute('business-id') || ''\n            },\n        }, {\n            // qq 小程序特有属性\n            name: 'shareType',\n            get(domNode) {\n                return dealWithNumber(domNode, 'share-type', 27)\n            },\n        }, {\n            // qq 小程序特有属性\n            name: 'shareMode',\n            get(domNode) {\n                return domNode.getAttribute('share-mode')\n            },\n        }],\n        handles: {\n            onButtonGetUserInfo(evt) {\n                this.callSingleEvent('getuserinfo', evt)\n            },\n\n            onButtonContact(evt) {\n                this.callSingleEvent('contact', evt)\n            },\n\n            onButtonGetPhoneNumber(evt) {\n                this.callSingleEvent('getphonenumber', evt)\n            },\n\n            onButtonError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n\n            onButtonOpenSetting(evt) {\n                this.callSingleEvent('opensetting', evt)\n            },\n\n            onButtonLaunchApp(evt) {\n                this.callSingleEvent('launchapp', evt)\n            },\n\n            onButtonGetRealnameAuthInfo(evt) {\n                // 已废弃，建议使用：https://developers.weixin.qq.com/miniprogram/dev/framework/cityservice/cityservice-checkrealnameinfo.html\n                this.callSingleEvent('getrealnameauthinfo', evt)\n            },\n        },\n    },\n    editor: {\n        wxCompName: 'editor',\n        properties: [{\n            name: 'readOnly',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'read-only')\n            },\n        }, {\n            name: 'placeholder',\n            get(domNode) {\n                return domNode.getAttribute('placeholder') || ''\n            },\n        }, {\n            name: 'showImgSize',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-img-size')\n            },\n        }, {\n            name: 'showImgToolbar',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-img-toolbar')\n            },\n        }, {\n            name: 'showImgResize',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-img-resize')\n            },\n        }],\n        handles: {\n            onEditorReady(evt) {\n                this.callSingleEvent('ready', evt)\n            },\n\n            onEditorFocus(evt) {\n                this.callSingleEvent('focus', evt)\n            },\n\n            onEditorBlur(evt) {\n                this.callSingleEvent('blur', evt)\n            },\n\n            onEditorInput(evt) {\n                this.callSingleEvent('input', evt)\n            },\n\n            onEditorStatusChange(evt) {\n                this.callSingleEvent('statuschange', evt)\n            },\n        },\n    },\n    form: {\n        // 可以认为下述 form 组件的属性和事件是几乎没有用的，因为 button 组件会被封装到自定义组件内\n        wxCompName: 'form',\n        properties: [{\n            name: 'reportSubmit',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'report-submit')\n            },\n        }, {\n            name: 'reportSubmitTimeout',\n            get(domNode) {\n                return +domNode.getAttribute('report-submit-timeout') || 0\n            },\n        }],\n        handles: {\n            onFormSubmit(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode._formId = evt.detail.formId\n                // submit 事件由 kbone 模拟，不需要原生 submit 事件\n            },\n\n            onFormReset() {\n                // reset 事件由 kbone 模拟，不需要原生 reset 事件\n            },\n        },\n    },\n    INPUT: {\n        wxCompName: 'input',\n        properties: [{\n            name: 'value',\n            canBeUserChanged: true,\n            get(domNode) {\n                return domNode.value || ''\n            },\n        }, {\n            name: 'type',\n            get(domNode) {\n                const value = domNode.type || 'text'\n                return value !== 'password' ? value : 'text'\n            },\n        }, {\n            name: 'password',\n            get(domNode) {\n                return domNode.type !== 'password' ? dealWithBoolValue(domNode, 'password') : true\n            },\n        }, {\n            name: 'placeholder',\n            get(domNode) {\n                return domNode.placeholder\n            },\n        }, {\n            name: 'placeholderStyle',\n            get(domNode) {\n                return domNode.getAttribute('placeholder-style') || ''\n            },\n        }, {\n            name: 'placeholderClass',\n            get(domNode) {\n                return domNode.getAttribute('placeholder-class') || 'input-placeholder'\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return domNode.disabled\n            },\n        }, {\n            name: 'maxlength',\n            get(domNode) {\n                return dealWithNumber(domNode, 'maxlength', 140)\n            },\n        }, {\n            name: 'cursorSpacing',\n            get(domNode) {\n                return +domNode.getAttribute('cursor-spacing') || 0\n            },\n        }, {\n            name: 'autoFocus',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'autofocus')\n            },\n        }, {\n            name: 'focus',\n            canBeUserChanged: true,\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'focus')\n            },\n        }, {\n            name: 'confirmType',\n            get(domNode) {\n                return domNode.getAttribute('confirm-type') || 'done'\n            },\n        }, {\n            name: 'confirmHold',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'confirm-hold')\n            },\n        }, {\n            name: 'cursor',\n            get(domNode) {\n                return dealWithNumber(domNode, 'cursor', -1)\n            },\n        }, {\n            name: 'selectionStart',\n            get(domNode) {\n                return dealWithNumber(domNode, 'selection-start', -1)\n            },\n        }, {\n            name: 'selectionEnd',\n            get(domNode) {\n                return dealWithNumber(domNode, 'selection-end', -1)\n            },\n        }, {\n            name: 'adjustPosition',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'adjust-position', true)\n            },\n        }, {\n            name: 'holdKeyboard',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'hold-keyboard')\n            },\n        }, {\n            name: 'checked',\n            canBeUserChanged: true,\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'checked')\n            },\n        }, {\n            name: 'color',\n            get(domNode) {\n                return domNode.getAttribute('color') || '#09BB07'\n            },\n        }],\n        handles: {\n            onInputInput(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                const value = '' + evt.detail.value\n                domNode.$$setAttributeWithoutUpdate('value', value)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.value = value\n\n                this.callEvent('input', evt)\n            },\n\n            onInputFocus(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode._inputOldValue = domNode.value\n                domNode.$$setAttributeWithoutUpdate('focus', true)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.focus = true\n\n                this.callSimpleEvent('focus', evt)\n                this.callEvent('focusin', evt)\n            },\n\n            onInputBlur(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('focus', false)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.focus = false\n\n                if (domNode._inputOldValue !== undefined && domNode.value !== domNode._inputOldValue) {\n                    domNode._inputOldValue = undefined\n                    this.callEvent('change', evt)\n                }\n                this.callSimpleEvent('blur', evt)\n                this.callEvent('focusout', evt)\n            },\n\n            onInputConfirm(evt) {\n                this.callSimpleEvent('confirm', evt)\n            },\n\n            onInputKeyBoardHeightChange(evt) {\n                this.callSingleEvent('keyboardheightchange', evt)\n            },\n\n            onRadioChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                const window = cache.getWindow(this.pageId)\n                const value = evt.detail.value\n                const name = domNode.name\n\n                if (value === domNode.value) {\n                    domNode.$$setAttributeWithoutUpdate('checked', true)\n\n                    // 可被用户行为改变的值，需要记录\n                    domNode._oldValues = domNode._oldValues || {}\n                    domNode._oldValues.checked = true\n\n                    const otherDomNodes = window.document.querySelectorAll(`input[name=${name}]`) || []\n                    for (const otherDomNode of otherDomNodes) {\n                        if (otherDomNode.type === 'radio' && otherDomNode !== domNode) {\n                            otherDomNode.setAttribute('checked', false)\n\n                            // 可被用户行为改变的值，需要记录\n                            otherDomNode._oldValues = otherDomNode._oldValues || {}\n                            otherDomNode._oldValues.checked = false\n                        }\n                    }\n                    this.callEvent('$$radioChange', evt)\n                }\n                this.callEvent('input', evt)\n                this.callEvent('change', evt)\n            },\n\n            onCheckboxChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                const value = evt.detail.value || []\n                if (value.indexOf(domNode.value) >= 0) {\n                    domNode.$$setAttributeWithoutUpdate('checked', true)\n\n                    // 可被用户行为改变的值，需要记录\n                    domNode._oldValues = domNode._oldValues || {}\n                    domNode._oldValues.checked = true\n                } else {\n                    domNode.$$setAttributeWithoutUpdate('checked', false)\n\n                    // 可被用户行为改变的值，需要记录\n                    domNode._oldValues = domNode._oldValues || {}\n                    domNode._oldValues.checked = false\n                }\n                this.callEvent('$$checkboxChange', evt)\n                this.callEvent('input', evt)\n                this.callEvent('change', evt)\n            },\n        },\n    },\n    picker: {\n        wxCompName: 'picker',\n        properties: [{\n            name: 'headerText',\n            get(domNode) {\n                return domNode.getAttribute('header-text') || ''\n            },\n        }, {\n            name: 'mode',\n            get(domNode) {\n                return domNode.getAttribute('mode') || 'selector'\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'disabled')\n            },\n        }, {\n            name: 'range',\n            get(domNode) {\n                if (domNode.tagName === 'SELECT') {\n                    return domNode.options.map(item => ({\n                        label: item.label,\n                        value: item.value,\n                    }))\n                }\n\n                let value = domNode.getAttribute('range')\n                if (typeof value === 'string') {\n                    const parseValue = dealWithObjectString(value)\n                    value = parseValue !== undefined ? parseValue : value.split(',')\n                }\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'rangeKey',\n            get(domNode) {\n                if (domNode.tagName === 'SELECT') return 'label'\n\n                return domNode.getAttribute('range-key') || ''\n            },\n        }, {\n            name: 'value',\n            canBeUserChanged: true,\n            get(domNode) {\n                if (domNode.tagName === 'SELECT') return +domNode.selectedIndex || 0\n\n                const mode = domNode.getAttribute('mode') || 'selector'\n                let value = domNode.getAttribute('value')\n\n                if (mode === 'selector') {\n                    return +value || 0\n                } else if (mode === 'multiSelector') {\n                    if (typeof value === 'string') {\n                        const parseValue = dealWithObjectString(value)\n                        value = parseValue !== undefined ? parseValue : value.split(',')\n                        value = value.map(item => parseInt(item, 10))\n                    }\n                    return value || []\n                } else if (mode === 'time') {\n                    return value || ''\n                } else if (mode === 'date') {\n                    return value || '0'\n                } else if (mode === 'region') {\n                    if (typeof value === 'string') {\n                        const parseValue = dealWithObjectString(value)\n                        value = parseValue !== undefined ? parseValue : value.split(',')\n                    }\n                    return value || []\n                }\n\n                return value\n            },\n        }, {\n            name: 'start',\n            get(domNode) {\n                return domNode.getAttribute('start') || ''\n            },\n        }, {\n            name: 'end',\n            get(domNode) {\n                return domNode.getAttribute('end') || ''\n            },\n        }, {\n            name: 'fields',\n            get(domNode) {\n                return domNode.getAttribute('fields') || 'day'\n            },\n        }, {\n            name: 'customItem',\n            get(domNode) {\n                return domNode.getAttribute('custom-item') || ''\n            }\n        }],\n        handles: {\n            onPickerChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                let value = evt.detail.value\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.value = value\n\n                if (domNode.tagName === 'SELECT') {\n                    value = +value\n                    domNode.$$setAttributeWithoutUpdate('value', domNode.options[value] && domNode.options[value].value || '')\n                    domNode.$$setAttributeWithoutUpdate('selectedIndex', value)\n                    domNode.$$resetOptions()\n\n                    this.callEvent('change', evt)\n                } else {\n                    domNode.$$setAttributeWithoutUpdate('value', value)\n\n                    this.callSingleEvent('change', evt)\n                }\n            },\n\n            onPickerColumnChange(evt) {\n                this.callSingleEvent('columnchange', evt)\n            },\n\n            onPickerCancel(evt) {\n                this.callSingleEvent('cancel', evt)\n            },\n        },\n    },\n    'picker-view': {\n        wxCompName: 'picker-view',\n        properties: [{\n            name: 'value',\n            canBeUserChanged: true,\n            get(domNode) {\n                let value = domNode.getAttribute('value')\n                if (typeof value === 'string') {\n                    const parseValue = dealWithObjectString(value)\n                    value = parseValue !== undefined ? parseValue : value.split(',')\n                    value = value.map(item => parseInt(item, 10))\n                }\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'indicatorStyle',\n            get(domNode) {\n                return domNode.getAttribute('indicator-style') || ''\n            },\n        }, {\n            name: 'indicatorClass',\n            get(domNode) {\n                return domNode.getAttribute('indicator-class') || ''\n            },\n        }, {\n            name: 'maskStyle',\n            get(domNode) {\n                return domNode.getAttribute('mask-style') || ''\n            },\n        }, {\n            name: 'maskClass',\n            get(domNode) {\n                return domNode.getAttribute('mask-class') || ''\n            },\n        }],\n        handles: {\n            onPickerViewChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('value', evt.detail.value)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.value = evt.detail.value\n\n                this.callSingleEvent('change', evt)\n            },\n\n            onPickerViewPickstart(evt) {\n                this.callSingleEvent('pickstart', evt)\n            },\n\n            onPickerViewPickend(evt) {\n                this.callSingleEvent('pickend', evt)\n            },\n        },\n    },\n    slider: {\n        wxCompName: 'slider',\n        properties: [{\n            name: 'min',\n            get(domNode) {\n                return +domNode.getAttribute('min') || 0\n            },\n        }, {\n            name: 'max',\n            get(domNode) {\n                return dealWithNumber(domNode, 'max', 100)\n            },\n        }, {\n            name: 'step',\n            get(domNode) {\n                return dealWithNumber(domNode, 'step', 1)\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'disabled')\n            },\n        }, {\n            name: 'value',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('value') || 0\n            },\n        }, {\n            name: 'color',\n            get(domNode) {\n                return domNode.getAttribute('color') || '#e9e9e9'\n            },\n        }, {\n            name: 'selectedColor',\n            get(domNode) {\n                return domNode.getAttribute('selected-color') || '#1aad19'\n            },\n        }, {\n            name: 'activeColor',\n            get(domNode) {\n                return domNode.getAttribute('active-color') || '#1aad19'\n            },\n        }, {\n            name: 'backgroundColor',\n            get(domNode) {\n                return domNode.getAttribute('background-color') || '#e9e9e9'\n            },\n        }, {\n            name: 'blockSize',\n            get(domNode) {\n                return dealWithNumber(domNode, 'block-size', 28)\n            },\n        }, {\n            name: 'blockColor',\n            get(domNode) {\n                return domNode.getAttribute('block-color') || '#ffffff'\n            },\n        }, {\n            name: 'showValue',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-value')\n            },\n        }],\n        handles: {\n            onSliderChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('value', evt.detail.value)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.value = evt.detail.value\n\n                this.callSingleEvent('change', evt)\n            },\n\n            onSliderChanging(evt) {\n                this.callSingleEvent('changing', evt)\n            },\n        },\n    },\n    switch: {\n        wxCompName: 'switch',\n        properties: [{\n            name: 'checked',\n            canBeUserChanged: true,\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'checked')\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'disabled')\n            },\n        }, {\n            name: 'type',\n            get(domNode) {\n                return domNode.getAttribute('type') || 'switch'\n            },\n        }, {\n            name: 'color',\n            get(domNode) {\n                return domNode.getAttribute('color') || '#04BE02'\n            },\n        }],\n        handles: {\n            onSwitchChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('checked', evt.detail.value)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.checked = evt.detail.value\n\n                this.callSingleEvent('change', evt)\n            },\n        },\n    },\n    TEXTAREA: {\n        wxCompName: 'textarea',\n        properties: [{\n            name: 'value',\n            canBeUserChanged: true,\n            get(domNode) {\n                return domNode.value || ''\n            },\n        }, {\n            name: 'placeholder',\n            get(domNode) {\n                return domNode.placeholder\n            },\n        }, {\n            name: 'placeholderStyle',\n            get(domNode) {\n                return domNode.getAttribute('placeholder-style') || ''\n            },\n        }, {\n            name: 'placeholderClass',\n            get(domNode) {\n                return domNode.getAttribute('placeholder-class') || 'textarea-placeholder'\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return domNode.disabled\n            },\n        }, {\n            name: 'maxlength',\n            get(domNode) {\n                return dealWithNumber(domNode, 'maxlength', 140)\n            }\n        }, {\n            name: 'autoFocus',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'autofocus')\n            },\n        }, {\n            name: 'focus',\n            canBeUserChanged: true,\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'focus')\n            },\n        }, {\n            name: 'autoHeight',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'auto-height')\n            },\n        }, {\n            name: 'fixed',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'fixed')\n            },\n        }, {\n            name: 'cursorSpacing',\n            get(domNode) {\n                return +domNode.getAttribute('cursor-spacing') || 0\n            },\n        }, {\n            name: 'cursor',\n            get(domNode) {\n                return dealWithNumber(domNode, 'cursor', -1)\n            },\n        }, {\n            name: 'showConfirmBar',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-confirm-bar', true)\n            },\n        }, {\n            name: 'selectionStart',\n            get(domNode) {\n                return dealWithNumber(domNode, 'selection-start', -1)\n            },\n        }, {\n            name: 'selectionEnd',\n            get(domNode) {\n                return dealWithNumber(domNode, 'selection-end', -1)\n            },\n        }, {\n            name: 'adjustPosition',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'adjust-position', true)\n            },\n        }, {\n            name: 'holdKeyboard',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'hold-keyboard')\n            },\n        }, {\n            name: 'disableDefaultPadding',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'disable-default-padding')\n            },\n        }],\n        handles: {\n            onTextareaFocus(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode._textareaOldValue = domNode.value\n                domNode.$$setAttributeWithoutUpdate('focus', true)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.focus = true\n\n                this.callSimpleEvent('focus', evt)\n                this.callEvent('focusin', evt)\n            },\n\n            onTextareaBlur(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('focus', false)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.focus = false\n\n                if (domNode._textareaOldValue !== undefined && domNode.value !== domNode._textareaOldValue) {\n                    domNode._textareaOldValue = undefined\n                    this.callEvent('change', evt)\n                }\n                this.callSimpleEvent('blur', evt)\n                this.callEvent('focusout', evt)\n            },\n\n            onTextareaLineChange(evt) {\n                this.callSingleEvent('linechange', evt)\n            },\n\n            onTextareaInput(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                const value = '' + evt.detail.value\n                domNode.$$setAttributeWithoutUpdate('value', value)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.value = value\n\n                this.callEvent('input', evt)\n            },\n\n            onTextareaConfirm(evt) {\n                this.callSimpleEvent('confirm', evt)\n            },\n\n            onTextareaKeyBoardHeightChange(evt) {\n                this.callSingleEvent('keyboardheightchange', evt)\n            },\n        },\n    },\n    // 导航\n    navigator: {\n        wxCompName: 'navigator',\n        properties: [{\n            name: 'target',\n            get(domNode) {\n                return domNode.getAttribute('target') || 'self'\n            },\n        }, {\n            name: 'url',\n            get(domNode) {\n                return domNode.getAttribute('url') || ''\n            },\n        }, {\n            name: 'openType',\n            get(domNode) {\n                return domNode.getAttribute('open-type') || 'navigate'\n            },\n        }, {\n            name: 'delta',\n            get(domNode) {\n                return dealWithNumber(domNode, 'delta', 1)\n            },\n        }, {\n            name: 'appId',\n            get(domNode) {\n                return domNode.getAttribute('app-id') || ''\n            },\n        }, {\n            name: 'path',\n            get(domNode) {\n                return domNode.getAttribute('path') || ''\n            },\n        }, {\n            name: 'extraData',\n            get(domNode) {\n                return domNode.getAttribute('extra-data') || {}\n            },\n        }, {\n            name: 'version',\n            get(domNode) {\n                return domNode.getAttribute('version') || 'release'\n            },\n        }, {\n            name: 'hoverClass',\n            get(domNode) {\n                return domNode.getAttribute('hover-class') || 'navigator-hover'\n            },\n        }, {\n            name: 'hoverStopPropagation',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'hover-stop-propagation')\n            },\n        }, {\n            name: 'hoverStartTime',\n            get(domNode) {\n                return dealWithNumber(domNode, 'hover-start-time', 50)\n            },\n        }, {\n            name: 'hoverStayTime',\n            get(domNode) {\n                return dealWithNumber(domNode, 'hover-stay-time', 600)\n            },\n        }],\n        handles: {\n            onNavigatorSuccess(evt) {\n                this.callSingleEvent('success', evt)\n            },\n\n            onNavigatorFail(evt) {\n                this.callSingleEvent('fail', evt)\n            },\n\n            onNavigatorComplete(evt) {\n                this.callSingleEvent('complete', evt)\n            },\n        },\n    },\n    // 媒体组件\n    camera: {\n        wxCompName: 'camera',\n        properties: [{\n            name: 'mode',\n            get(domNode) {\n                return domNode.getAttribute('mode') || 'normal'\n            },\n        }, {\n            name: 'resolution',\n            get(domNode) {\n                return domNode.getAttribute('resolution') || 'medium'\n            },\n        }, {\n            name: 'devicePosition',\n            get(domNode) {\n                return domNode.getAttribute('device-position') || 'back'\n            },\n        }, {\n            name: 'flash',\n            get(domNode) {\n                return domNode.getAttribute('flash') || 'auto'\n            },\n        }, {\n            name: 'frameSize',\n            get(domNode) {\n                return domNode.getAttribute('frame-size') || 'medium'\n            },\n        }],\n        handles: {\n            onCameraStop(evt) {\n                this.callSingleEvent('stop', evt)\n            },\n\n            onCameraError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n\n            onCameraInitDone(evt) {\n                this.callSingleEvent('initdone', evt)\n            },\n\n            onCameraScanCode(evt) {\n                this.callSingleEvent('scancode', evt)\n            },\n        },\n    },\n    image: {\n        wxCompName: 'image',\n        properties: [{\n            name: 'renderingMode',\n            get(domNode) {\n                return domNode.getAttribute('rendering-mode') || ''\n            },\n        }, {\n            name: 'src',\n            get(domNode) {\n                return domNode.src ? tool.completeURL(domNode.src, '', true) : ''\n            },\n        }, {\n            name: 'mode',\n            get(domNode) {\n                return domNode.getAttribute('mode') || 'scaleToFill'\n            },\n        }, {\n            name: 'webp',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'webp')\n            },\n        }, {\n            name: 'lazyLoad',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'lazy-load')\n            },\n        }, {\n            name: 'showMenuByLongpress',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-menu-by-longpress')\n            },\n        }],\n        handles: {\n            onImageLoad(evt) {\n                this.callSingleEvent('load', evt)\n            },\n\n            onImageError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    'live-player': {\n        wxCompName: 'live-player',\n        properties: [{\n            name: 'src',\n            get(domNode) {\n                return domNode.src ? tool.completeURL(domNode.src, '', true) : ''\n            },\n        }, {\n            name: 'mode',\n            get(domNode) {\n                return domNode.getAttribute('mode') || 'live'\n            },\n        }, {\n            name: 'autoplay',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'autoplay')\n            },\n        }, {\n            name: 'muted',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'muted')\n            },\n        }, {\n            name: 'orientation',\n            get(domNode) {\n                return domNode.getAttribute('orientation') || 'vertical'\n            },\n        }, {\n            name: 'objectFit',\n            get(domNode) {\n                return domNode.getAttribute('object-fit') || 'contain'\n            },\n        }, {\n            name: 'backgroundMute',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'background-mute')\n            },\n        }, {\n            name: 'minCache',\n            get(domNode) {\n                return dealWithNumber(domNode, 'min-cache', 1)\n            },\n        }, {\n            name: 'maxCache',\n            get(domNode) {\n                return dealWithNumber(domNode, 'max-cache', 3)\n            },\n        }, {\n            name: 'soundMode',\n            get(domNode) {\n                return domNode.getAttribute('sound-mode') || 'speaker'\n            },\n        }, {\n            name: 'autoPauseIfNavigate',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'auto-pause-if-navigate', true)\n            },\n        }, {\n            name: 'autoPauseIfOpenNative',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'auto-pause-if-open-native', true)\n            },\n        }, {\n            name: 'pictureInPictureMode',\n            get(domNode) {\n                let value = domNode.getAttribute('picture-in-picture-mode')\n                if (typeof value === 'string') {\n                    const parseValue = dealWithObjectString(value)\n                    value = parseValue !== undefined ? parseValue : value.split(',')\n\n                    if (Array.isArray(value) && value.length === 1) value = '' + value[0]\n                }\n\n                return value\n            },\n        }],\n        handles: {\n            onLivePlayerStateChange(evt) {\n                this.callSingleEvent('statechange', evt)\n            },\n\n            onLivePlayerFullScreenChange(evt) {\n                this.callSingleEvent('fullscreenchange', evt)\n            },\n\n            onLivePlayerNetStatus(evt) {\n                this.callSingleEvent('netstatus', evt)\n            },\n\n            onLivePlayerAudioVolumeNotify(evt) {\n                this.callSingleEvent('audiovolumenotify', evt)\n            },\n\n            onLivePlayerEnterPictureInPicture(evt) {\n                this.callSingleEvent('enterpictureinpicture', evt)\n            },\n\n            onLivePlayerLeavePictureInPicture(evt) {\n                this.callSingleEvent('leavepictureinpicture', evt)\n            },\n        },\n    },\n    'live-pusher': {\n        wxCompName: 'live-pusher',\n        properties: [{\n            name: 'url',\n            get(domNode) {\n                const url = domNode.getAttribute('url')\n                return url ? tool.completeURL(url, '', true) : ''\n            },\n        }, {\n            name: 'mode',\n            get(domNode) {\n                return domNode.getAttribute('mode') || 'RTC'\n            },\n        }, {\n            name: 'autopush',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'autopush')\n            },\n        }, {\n            name: 'muted',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'muted')\n            },\n        }, {\n            name: 'enableCamera',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-camera', true)\n            },\n        }, {\n            name: 'autoFocus',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'auto-focus', true)\n            },\n        }, {\n            name: 'orientation',\n            get(domNode) {\n                return domNode.getAttribute('orientation') || 'vertical'\n            },\n        }, {\n            name: 'beauty',\n            get(domNode) {\n                return +domNode.getAttribute('beauty') || 0\n            },\n        }, {\n            name: 'whiteness',\n            get(domNode) {\n                return +domNode.getAttribute('whiteness') || 0\n            },\n        }, {\n            name: 'aspect',\n            get(domNode) {\n                return domNode.getAttribute('aspect') || '9:16'\n            },\n        }, {\n            name: 'minBitrate',\n            get(domNode) {\n                return dealWithNumber(domNode, 'min-bitrate', 200)\n            },\n        }, {\n            name: 'maxBitrate',\n            get(domNode) {\n                return dealWithNumber(domNode, 'max-bitrate', 1000)\n            },\n        }, {\n            name: 'waitingImage',\n            get(domNode) {\n                return domNode.getAttribute('waiting-image') || ''\n            },\n        }, {\n            name: 'waitingImageHash',\n            get(domNode) {\n                return domNode.getAttribute('waiting-image-hash') || ''\n            },\n        }, {\n            name: 'zoom',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'zoom')\n            },\n        }, {\n            name: 'devicePosition',\n            get(domNode) {\n                return domNode.getAttribute('device-position') || 'front'\n            },\n        }, {\n            name: 'backgroundMute',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'background-mute')\n            },\n        }, {\n            name: 'mirror',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'mirror')\n            },\n        }, {\n            name: 'remoteMirror',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'remote-mirror')\n            },\n        }, {\n            name: 'localMirror',\n            get(domNode) {\n                return domNode.getAttribute('local-mirror') || 'auto'\n            },\n        }, {\n            name: 'audioReverbType',\n            get(domNode) {\n                return +domNode.getAttribute('audio-reverb-type') || 0\n            },\n        }, {\n            name: 'enableMic',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-mic', true)\n            },\n        }, {\n            name: 'enableAgc',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-agc')\n            },\n        }, {\n            name: 'enableAns',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-ans')\n            },\n        }, {\n            name: 'audioVolumeType',\n            get(domNode) {\n                return domNode.getAttribute('audio-volume-type') || 'voicecall'\n            },\n        }, {\n            name: 'videoWidth',\n            get(domNode) {\n                return dealWithNumber(domNode, 'video-width', 360)\n            },\n        }, {\n            name: 'videoHeight',\n            get(domNode) {\n                return dealWithNumber(domNode, 'video-height', 640)\n            },\n        }],\n        handles: {\n            onLivePusherStateChange(evt) {\n                this.callSingleEvent('statechange', evt)\n            },\n\n            onLivePusherNetStatus(evt) {\n                this.callSingleEvent('netstatus', evt)\n            },\n\n            onLivePusherError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n\n            onLivePusherBgmStart(evt) {\n                this.callSingleEvent('bgmstart', evt)\n            },\n\n            onLivePusherBgmProgress(evt) {\n                this.callSingleEvent('bgmprogress', evt)\n            },\n\n            onLivePusherBgmComplete(evt) {\n                this.callSingleEvent('bgmcomplete', evt)\n            },\n\n        },\n    },\n    VIDEO: {\n        wxCompName: 'video',\n        properties: [{\n            name: 'src',\n            get(domNode) {\n                return domNode.src ? tool.completeURL(domNode.src, '', true) : ''\n            },\n        }, {\n            name: 'duration',\n            get(domNode) {\n                return +domNode.getAttribute('duration') || 0\n            },\n        }, {\n            name: 'controls',\n            get(domNode) {\n                return domNode.controls\n            },\n        }, {\n            name: 'danmuList',\n            get(domNode) {\n                const value = domNode.getAttribute('danmu-list')\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'danmuBtn',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'danmu-btn')\n            },\n        }, {\n            name: 'enableDanmu',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-danmu')\n            },\n        }, {\n            name: 'autoplay',\n            get(domNode) {\n                return domNode.autoplay\n            },\n        }, {\n            name: 'loop',\n            get(domNode) {\n                return domNode.loop\n            },\n        }, {\n            name: 'muted',\n            get(domNode) {\n                return domNode.muted\n            },\n        }, {\n            name: 'initialTime',\n            get(domNode) {\n                return +domNode.getAttribute('initial-time') || 0\n            },\n        }, {\n            name: 'direction',\n            get(domNode) {\n                return dealWithNumber(domNode, 'direction', -1)\n            },\n        }, {\n            name: 'showProgress',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-progress', true)\n            },\n        }, {\n            name: 'showFullscreenBtn',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-fullscreen-btn', true)\n            },\n        }, {\n            name: 'showPlayBtn',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-play-btn', true)\n            },\n        }, {\n            name: 'showCenterPlayBtn',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-center-play-btn', true)\n            },\n        }, {\n            name: 'enableProgressGesture',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-progress-gesture', true)\n            },\n        }, {\n            name: 'objectFit',\n            get(domNode) {\n                return domNode.getAttribute('object-fit') || 'contain'\n            },\n        }, {\n            name: 'poster',\n            get(domNode) {\n                return domNode.poster ? tool.completeURL(domNode.poster, '', true) : ''\n            },\n        }, {\n            name: 'showMuteBtn',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-mute-btn')\n            },\n        }, {\n            name: 'title',\n            get(domNode) {\n                return domNode.getAttribute('title') || ''\n            },\n        }, {\n            name: 'playBtnPosition',\n            get(domNode) {\n                return domNode.getAttribute('play-btn-position') || 'bottom'\n            },\n        }, {\n            name: 'enablePlayGesture',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-play-gesture')\n            },\n        }, {\n            name: 'autoPauseIfNavigate',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'auto-pause-if-navigate', true)\n            },\n        }, {\n            name: 'autoPauseIfOpenNative',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'auto-pause-if-open-native', true)\n            },\n        }, {\n            name: 'vslideGesture',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'vslide-gesture')\n            },\n        }, {\n            name: 'vslideGestureInFullscreen',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'vslide-gesture-in-fullscreen', true)\n            },\n        }, {\n            name: 'adUnitId',\n            get(domNode) {\n                return domNode.getAttribute('ad-unit-id') || ''\n            },\n        }, {\n            name: 'posterForCrawler',\n            get(domNode) {\n                return domNode.getAttribute('poster-for-crawler') || ''\n            },\n        }, {\n            name: 'showCastingButton',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-casting-button')\n            },\n        }, {\n            name: 'pictureInPictureMode',\n            get(domNode) {\n                let value = domNode.getAttribute('picture-in-picture-mode')\n                if (typeof value === 'string') {\n                    const parseValue = dealWithObjectString(value)\n                    value = parseValue !== undefined ? parseValue : value.split(',')\n\n                    if (Array.isArray(value) && value.length === 1) value = '' + value[0]\n                }\n\n                return value\n            },\n        }, {\n            name: 'pictureInPictureShowProgress',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'picture-in-picture-show-progress')\n            },\n        }, {\n            name: 'enableAutoRotation',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-auto-rotation')\n            },\n        }, {\n            name: 'showScreenLockButton',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-screen-lock-button')\n            },\n        }],\n        handles: {\n            onVideoPlay(evt) {\n                this.callSingleEvent('play', evt)\n            },\n\n            onVideoPause(evt) {\n                this.callSingleEvent('pause', evt)\n            },\n\n            onVideoEnded(evt) {\n                this.callSingleEvent('ended', evt)\n            },\n\n            onVideoTimeUpdate(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('currentTime', evt.detail.currentTime)\n                this.callSingleEvent('timeupdate', evt)\n            },\n\n            onVideoFullScreenChange(evt) {\n                this.callSingleEvent('fullscreenchange', evt)\n            },\n\n            onVideoWaiting(evt) {\n                this.callSingleEvent('waiting', evt)\n            },\n\n            onVideoError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n\n            onVideoProgress(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('buffered', evt.detail.buffered)\n                this.callSingleEvent('progress', evt)\n            },\n\n            onVideoLoadedMetaData(evt) {\n                this.callSingleEvent('loadedmetadata', evt)\n            },\n\n            onVideoControlsToggle(evt) {\n                this.callSingleEvent('controlstoggle', evt)\n            },\n\n            onVideoEnterPictureInPicture(evt) {\n                this.callSingleEvent('enterpictureinpicture', evt)\n            },\n\n            onVideoLeavePictureInPicture(evt) {\n                this.callSingleEvent('leavepictureinpicture', evt)\n            },\n        },\n    },\n    'voip-room': {\n        wxCompName: 'voip-room',\n        properties: [{\n            name: 'openid',\n            get(domNode) {\n                return domNode.getAttribute('openid') || ''\n            },\n        }, {\n            name: 'mode',\n            get(domNode) {\n                return domNode.getAttribute('mode') || 'camera'\n            },\n        }, {\n            name: 'devicePosition',\n            get(domNode) {\n                return domNode.getAttribute('device-position') || 'front'\n            },\n        }],\n        handles: {\n            onVoipRoomError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    // 地图\n    map: {\n        wxCompName: 'map',\n        properties: [{\n            name: 'longitude',\n            canBeUserChanged: true,\n            get(domNode) {\n                return dealWithNumber(domNode, 'longitude', 39.92)\n            },\n        }, {\n            name: 'latitude',\n            canBeUserChanged: true,\n            get(domNode) {\n                return dealWithNumber(domNode, 'latitude', 116.46)\n            },\n        }, {\n            name: 'scale',\n            canBeUserChanged: true,\n            get(domNode) {\n                return dealWithNumber(domNode, 'scale', 16)\n            },\n        }, {\n            name: 'markers',\n            get(domNode) {\n                const value = dealWithObjectString(domNode.getAttribute('markers'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'polyline',\n            get(domNode) {\n                const value = dealWithObjectString(domNode.getAttribute('polyline'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'circles',\n            get(domNode) {\n                const value = dealWithObjectString(domNode.getAttribute('circles'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'controls',\n            get(domNode) {\n                const value = dealWithObjectString(domNode.getAttribute('controls'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'includePoints',\n            get(domNode) {\n                const value = dealWithObjectString(domNode.getAttribute('include-points'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'showLocation',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-location')\n            },\n        }, {\n            name: 'polygons',\n            get(domNode) {\n                const value = dealWithObjectString(domNode.getAttribute('polygons'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'subkey',\n            get(domNode) {\n                return domNode.getAttribute('subkey') || ''\n            },\n        }, {\n            name: 'layerStyle',\n            get(domNode) {\n                return dealWithNumber(domNode, 'layer-style', 1)\n            },\n        }, {\n            name: 'rotate',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('rotate') || 0\n            },\n        }, {\n            name: 'skew',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('skew') || 0\n            },\n        }, {\n            name: 'enable3D',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-3D')\n            },\n        }, {\n            name: 'showCompass',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-compass')\n            },\n        }, {\n            name: 'showScale',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'show-scale')\n            },\n        }, {\n            name: 'enableOverlooking',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-overlooking')\n            },\n        }, {\n            name: 'enableZoom',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-zoom', true)\n            },\n        }, {\n            name: 'enableScroll',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-scroll', true)\n            },\n        }, {\n            name: 'enableRotate',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-rotate')\n            },\n        }, {\n            name: 'enableSatellite',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-satellite')\n            },\n        }, {\n            name: 'enableTraffic',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'enable-traffic')\n            },\n        }, {\n            name: 'setting',\n            get(domNode) {\n                return dealWithObjectString(domNode.getAttribute('setting')) || {}\n            },\n        }],\n        handles: {\n            onMapTap(evt) {\n                this.callSingleEvent('tap', evt)\n            },\n\n            onMapMarkerTap(evt) {\n                dealWithDevToolsEvt(evt)\n                this.callSingleEvent('markertap', evt)\n            },\n\n            onMapLabelTap(evt) {\n                dealWithDevToolsEvt(evt)\n                this.callSingleEvent('labeltap', evt)\n            },\n\n            onMapControlTap(evt) {\n                dealWithDevToolsEvt(evt)\n                this.callSingleEvent('controltap', evt)\n            },\n\n            onMapCalloutTap(evt) {\n                dealWithDevToolsEvt(evt)\n                this.callSingleEvent('callouttap', evt)\n            },\n\n            onMapUpdated(evt) {\n                this.callSingleEvent('updated', evt)\n            },\n\n            onMapRegionChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                if (!evt.detail.causedBy) evt.detail.causedBy = evt.causedBy\n                if (evt.type === 'end' || evt.detail.type === 'end') {\n                    // 可被用户行为改变的值，需要记录\n                    domNode._oldValues = domNode._oldValues || {}\n                    domNode._oldValues.longitude = evt.detail.centerLocation && evt.detail.centerLocation.longitude\n                    domNode._oldValues.latitude = evt.detail.centerLocation && evt.detail.centerLocation.latitude\n                    domNode._oldValues.scale = evt.detail.scale\n                    domNode._oldValues.rotate = evt.detail.rotate\n                    domNode._oldValues.skew = evt.detail.skew\n                }\n\n                this.callSingleEvent('regionchange', evt)\n            },\n\n            onMapPoiTap(evt) {\n                dealWithDevToolsEvt(evt)\n                this.callSingleEvent('poitap', evt)\n            },\n\n        },\n    },\n    // 画布\n    CANVAS: {\n        wxCompName: 'canvas',\n        properties: [{\n            name: 'type',\n            get(domNode) {\n                return domNode.getAttribute('type') || ''\n            },\n        }, {\n            name: 'canvasId',\n            get(domNode) {\n                return domNode.getAttribute('canvas-id') || ''\n            },\n        }, {\n            name: 'disableScroll',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'disable-scroll')\n            },\n        }, {\n            // kbone 自定义的特殊属性，用于兼容 iOS 端绑定了 canvas touch 事件后，触发不了页面滚动的 bug\n            name: 'disableEvent',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'disable-event')\n            },\n        }],\n        handles: {\n            onCanvasTouchStart(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('canvastouchstart', evt)\n                this.onTouchStart(evt)\n            },\n\n            onCanvasTouchMove(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('canvastouchmove', evt)\n                this.onTouchMove(evt)\n            },\n\n            onCanvasTouchEnd(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('canvastouchend', evt)\n                this.onTouchEnd(evt)\n            },\n\n            onCanvasTouchCancel(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('canvastouchcancel', evt)\n                this.onTouchCancel(evt)\n            },\n\n            onCanvasLongTap(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('longtap', evt)\n            },\n\n            onCanvasError(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    // 开放能力\n    ad: {\n        wxCompName: 'ad',\n        properties: [{\n            name: 'unitId',\n            get(domNode) {\n                return domNode.getAttribute('unit-id') || ''\n            },\n        }, {\n            name: 'adIntervals',\n            get(domNode) {\n                return +domNode.getAttribute('ad-intervals') || 0\n            },\n        }, {\n            name: 'adType',\n            get(domNode) {\n                return domNode.getAttribute('ad-type') || 'banner'\n            },\n        }, {\n            name: 'adTheme',\n            get(domNode) {\n                return domNode.getAttribute('ad-theme') || 'white'\n            },\n        }],\n        handles: {\n            onAdLoad(evt) {\n                this.callSingleEvent('load', evt)\n            },\n\n            onAdError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n\n            onAdClose(evt) {\n                this.callSingleEvent('close', evt)\n            },\n        },\n    },\n    'ad-custom': {\n        wxCompName: 'ad-custom',\n        properties: [{\n            name: 'unitId',\n            get(domNode) {\n                return domNode.getAttribute('unit-id') || ''\n            },\n        }, {\n            name: 'adIntervals',\n            get(domNode) {\n                return +domNode.getAttribute('ad-intervals') || 0\n            },\n        }],\n        handles: {\n            onAdCustomLoad(evt) {\n                this.callSingleEvent('load', evt)\n            },\n\n            onAdCustomError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n\n    },\n    'official-account': {\n        wxCompName: 'official-account',\n        handles: {\n            onOfficialAccountLoad(evt) {\n                this.callSingleEvent('load', evt)\n            },\n\n            onOfficialAccountError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    'open-data': {\n        wxCompName: 'open-data',\n        properties: [{\n            name: 'type',\n            get(domNode) {\n                return domNode.getAttribute('type') || ''\n            },\n        }, {\n            name: 'openGid',\n            get(domNode) {\n                return domNode.getAttribute('open-gid') || ''\n            },\n        }, {\n            name: 'lang',\n            get(domNode) {\n                return domNode.getAttribute('lang') || 'en'\n            },\n        }, {\n            name: 'defaultText',\n            get(domNode) {\n                return domNode.getAttribute('default-text') || ''\n            },\n        }, {\n            name: 'defaultAvatar',\n            get(domNode) {\n                return domNode.getAttribute('default-avatar') || ''\n            },\n        }],\n        handles: {\n            onOpenDataError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    'web-view': {\n        wxCompName: 'web-view',\n        properties: [{\n            name: 'src',\n            get(domNode) {\n                return domNode.src ? tool.completeURL(domNode.src, '', true) : ''\n            },\n        }],\n        handles: {\n            onWebviewMessage(evt) {\n                this.callSingleEvent('message', evt)\n            },\n\n            onWebviewLoad(evt) {\n                this.callSingleEvent('load', evt)\n            },\n\n            onWebviewError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    // 特殊补充\n    capture: {\n        wxCompName: 'capture',\n    },\n    catch: {\n        wxCompName: 'catch',\n    },\n    animation: {\n        wxCompName: 'animation',\n        properties: [{\n            name: 'animation',\n            get(domNode) {\n                return dealWithObjectString(domNode.getAttribute('animation'))\n            },\n        }],\n    },\n    'not-support': {\n        wxCompName: 'not-support',\n    },\n}\n\n// 补充标签\nwxComponentMap.SELECT = wxComponentMap.picker\n\nconst wxSubComponentMap = {\n    'movable-view': {\n        properties: [{\n            name: 'direction',\n            get(domNode) {\n                return domNode.getAttribute('direction') || 'none'\n            },\n        }, {\n            name: 'inertia',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'inertia')\n            },\n        }, {\n            name: 'outOfBounds',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'out-of-bounds')\n            },\n        }, {\n            name: 'x',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('x') || 0\n            },\n        }, {\n            name: 'y',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('y') || 0\n            },\n        }, {\n            name: 'damping',\n            get(domNode) {\n                return dealWithNumber(domNode, 'damping', 20)\n            },\n        }, {\n            name: 'friction',\n            get(domNode) {\n                return dealWithNumber(domNode, 'friction', 2)\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'disabled')\n            },\n        }, {\n            name: 'scale',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'scale')\n            },\n        }, {\n            name: 'scaleMin',\n            get(domNode) {\n                return dealWithNumber(domNode, 'scale-min', 0.5)\n            },\n        }, {\n            name: 'scaleMax',\n            get(domNode) {\n                return dealWithNumber(domNode, 'scale-max', 10)\n            },\n        }, {\n            name: 'scaleValue',\n            canBeUserChanged: true,\n            get(domNode) {\n                return dealWithNumber(domNode, 'scale-value', 1)\n            },\n        }, {\n            name: 'animation',\n            get(domNode) {\n                return dealWithBoolValue(domNode, 'animation', true)\n            },\n        }],\n        handles: {\n            onMovableViewChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('x', evt.detail.x)\n                domNode.$$setAttributeWithoutUpdate('y', evt.detail.y)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {scaleValue: dealWithNumber(domNode, 'scale-value', 1)}\n                domNode._oldValues.x = evt.detail.x\n                domNode._oldValues.y = evt.detail.y\n\n                this.callSingleEvent('change', evt)\n            },\n\n            onMovableViewScale(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('x', evt.detail.x)\n                domNode.$$setAttributeWithoutUpdate('y', evt.detail.y)\n                domNode.$$setAttributeWithoutUpdate('scale-value', evt.detail.scale)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.x = evt.detail.x\n                domNode._oldValues.y = evt.detail.y\n                domNode._oldValues.scaleValue = evt.detail.scale\n\n                this.callSingleEvent('scale', evt)\n            },\n\n            onMovableViewHtouchmove(evt) {\n                this.callSingleEvent('htouchmove', evt)\n            },\n\n            onMovableViewVtouchmove(evt) {\n                this.callSingleEvent('vtouchmove', evt)\n            },\n        },\n    },\n    'swiper-item': {\n        properties: [{\n            name: 'itemId',\n            get(domNode) {\n                return domNode.getAttribute('item-id') || ''\n            },\n        }],\n    },\n}\n\nconst wxComponentKeys = Object.keys(wxComponentMap)\nconst wxCompNameMap = {}\nconst wxCompData = {}\nconst wxCompHandles = {}\nwxComponentKeys.forEach(key => {\n    const {wxCompName, properties, handles} = wxComponentMap[key]\n\n    wxCompNameMap[key] = wxCompName\n    wxCompData[wxCompName] = properties || []\n    if (handles) Object.assign(wxCompHandles, handles)\n})\nObject.keys(wxSubComponentMap).forEach(key => {\n    const {handles} = wxSubComponentMap[key]\n    if (handles) Object.assign(wxCompHandles, handles)\n})\n\nmodule.exports = {\n    wxCompData,\n    wxCompHandles,\n    wxCompNameMap,\n    wxSubComponentMap,\n}\n","const mp = require('miniprogram-render')\nconst _ = require('./util/tool')\nconst component = require('./util/component')\n\nconst {\n    cache,\n    Event,\n    EventTarget,\n    tool,\n} = mp.$$adapter\nconst {\n    USE_TEMPLATE,\n} = _\nconst {\n    wxCompHandles,\n    wxCompNameMap,\n} = component\n\n// dom 子树作为自定义组件渲染的层级数\nconst MAX_DOM_SUB_TREE_LEVEL = 10\nlet DOM_SUB_TREE_LEVEL = 10\n\n// setData 的模式，默认使用 data path 模式\nlet isOriginalSetData = false\n\nconst version = swan.getSystemInfoSync().SDKVersion\nconst behaviors = []\nif (_.compareVersion(version, '2.10.3') >= 0) behaviors.push('wx://form-field-button')\nif (_.compareVersion(version, '2.11.2') < 0) console.warn('当前基础库版本低于 2.11.2，建议调整最低支持基础库。')\n\nmodule.exports = Behavior({\n    behaviors,\n    properties: {\n        inCover: {\n            type: Boolean,\n            value: false,\n        },\n    },\n    data: {\n        wxCompName: '', // 需要渲染的内置组件名\n        wxCustomCompName: '', // 需要渲染的自定义组件名\n        childNodes: [], // 孩子节点\n    },\n    created() {\n        const config = cache.getConfig()\n\n        // 根据配置重置全局变量\n        const domSubTreeLevel = +config.optimization.domSubTreeLevel\n        if (domSubTreeLevel >= 1 && domSubTreeLevel <= MAX_DOM_SUB_TREE_LEVEL) DOM_SUB_TREE_LEVEL = domSubTreeLevel\n\n        isOriginalSetData = config.optimization.setDataMode === 'original'\n    },\n    attached() {\n        const nodeId = this.dataset.privateNodeId\n        const pageId = this.dataset.privatePageId\n        const data = {}\n\n        this.nodeId = nodeId\n        this.pageId = pageId\n\n        // 记录 dom\n        this.domNode = cache.getNode(pageId, nodeId)\n        if (!this.domNode) return\n\n        // 存储 document\n        this.document = cache.getDocument(pageId)\n\n        // 监听全局事件\n        this.onChildNodesUpdate = tool.throttle(this.onChildNodesUpdate.bind(this))\n        this.domNode.$$clearEvent('$$childNodesUpdate', {$$namespace: 'root'})\n        this.domNode.addEventListener('$$childNodesUpdate', this.onChildNodesUpdate, {$$namespace: 'root'})\n        this.onSelfNodeUpdate = tool.throttle(this.onSelfNodeUpdate.bind(this))\n        this.domNode.$$clearEvent('$$domNodeUpdate', {$$namespace: 'root'})\n        this.domNode.addEventListener('$$domNodeUpdate', this.onSelfNodeUpdate, {$$namespace: 'root'})\n\n        // 初始化\n        this.init(data)\n\n        // 初始化孩子节点\n        const childNodes = _.filterNodes(this.domNode, DOM_SUB_TREE_LEVEL - 1, this)\n        data.childNodes = _.dealWithLeafAndSimple(childNodes, this.onChildNodesUpdate)\n\n        // 挂载该节点所处的自定义组件实例\n        if (data.wxCompName) this.domNode._wxComponent = this\n\n        // 执行一次 setData\n        if (Object.keys(data).length) _.setData(this, data)\n    },\n    detached() {\n        this.nodeId = null\n        this.pageId = null\n        this.domNode = null\n        this.document = null\n    },\n    methods: {\n        /**\n         * 初始化\n         */\n        init(data) {\n            const domNode = this.domNode\n            const tagName = domNode.tagName\n\n            // 使用 template 渲染\n            if (USE_TEMPLATE.indexOf(tagName) !== -1 || USE_TEMPLATE.indexOf(domNode.behavior) !== -1) return\n\n            if (tagName === 'WX-COMPONENT') {\n                // 内置组件，目前只有 view 组件需要进入\n                data.wxCompName = domNode.behavior\n                const wxCompName = wxCompNameMap[data.wxCompName]\n                if (wxCompName) _.checkComponentAttr(wxCompName, domNode, data)\n                else console.warn(`value \"${data.wxCompName}\" is not supported for wx-component's behavior`)\n            }\n        },\n\n        /**\n         * 监听子节点变化\n         */\n        onChildNodesUpdate() {\n            if (!this.pageId || !this.nodeId) return\n\n            // 儿子节点有变化\n            const childNodes = _.filterNodes(this.domNode, DOM_SUB_TREE_LEVEL - 1, this)\n            if (isOriginalSetData) {\n                // 全量 setData\n                if (_.checkDiffChildNodes(childNodes, this.data.childNodes)) {\n                    _.setData(this, {\n                        childNodes: _.dealWithLeafAndSimple(childNodes, this.onChildNodesUpdate),\n                    })\n                }\n            } else {\n                // 使用 data path 的模式\n                const destData = {count: 0}\n                const newChildNodes = _.dealWithLeafAndSimple(childNodes, this.onChildNodesUpdate)\n\n                if (!this.data.childNodes.length) {\n                    _.setData(this, {childNodes: newChildNodes})\n                } else {\n                    const isInterrupt = _.getDiffChildNodes(newChildNodes, this.data.childNodes, destData, 'childNodes')\n\n                    if (isInterrupt) {\n                        // key 数量超出阈值，转为 setData 完整数据\n                        _.setData(this, {childNodes: newChildNodes})\n                    } else if (destData.count) {\n                        delete destData.count\n                        _.setData(this, destData)\n                    }\n                }\n            }\n        },\n\n        /**\n         * 监听当前节点变化\n         */\n        onSelfNodeUpdate() {\n            if (!this.pageId || !this.nodeId) return\n\n            const domNode = this.domNode\n            const data = this.data\n            const tagName = domNode.tagName\n\n            // 使用 template 渲染\n            if (USE_TEMPLATE.indexOf(tagName) !== -1 || USE_TEMPLATE.indexOf(domNode.behavior) !== -1) return\n\n            if (tagName === 'WX-COMPONENT') {\n                // 内置组件，目前只有 view 组件需要进入\n                const newData = {}\n                const wxCompName = wxCompNameMap[domNode.behavior]\n\n                if (data.wxCompName !== domNode.behavior) newData.wxCompName = domNode.behavior\n                if (wxCompName) _.checkComponentAttr(wxCompName, domNode, newData, data)\n                if (Object.keys(newData)) _.setData(this, newData)\n            }\n        },\n\n        /**\n         * 触发简单节点事件，不做捕获冒泡处理\n         */\n        callSingleEvent(eventName, evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            const window = cache.getWindow(this.pageId)\n            if (!window) return\n            domNode.$$trigger(eventName, {\n                event: new Event({\n                    timeStamp: Date.now(),\n                    touches: evt && evt.touches,\n                    changedTouches: evt && evt.changedTouches,\n                    name: eventName,\n                    target: domNode,\n                    eventPhase: Event.AT_TARGET,\n                    detail: evt && evt.detail,\n                    $$extra: evt && evt.extra,\n                }),\n                currentTarget: domNode,\n            })\n        },\n\n        /**\n         * 触发简单节点事件，不做冒泡处理，但会走捕获阶段\n         */\n        callSimpleEvent(eventName, evt, domNode) {\n            domNode = domNode || this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            EventTarget.$$process(domNode, new Event({\n                touches: evt.touches,\n                changedTouches: evt.changedTouches,\n                name: eventName,\n                target: domNode,\n                eventPhase: Event.AT_TARGET,\n                detail: evt && evt.detail,\n                $$extra: evt && evt.extra,\n                bubbles: false, // 不冒泡\n            }))\n        },\n\n        /**\n         * 触发事件\n         */\n        callEvent(eventName, evt, extra) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            const miniprogramEvent = evt\n\n            if (!domNode) return\n\n            EventTarget.$$process(domNode, eventName, evt, extra, (domNode, evt, isCapture) => {\n                // 延迟触发跳转，先等所有同步回调处理完成\n                setTimeout(() => {\n                    if (evt.$$preventDefault) return\n                    const window = cache.getWindow(this.pageId)\n\n                    // 处理特殊节点事件\n                    if (domNode.tagName === 'LABEL' && evt.type === 'click' && !isCapture) {\n                        // 处理 label 的点击\n                        const forValue = domNode.getAttribute('for')\n                        let targetDomNode\n                        if (forValue) {\n                            targetDomNode = window.document.getElementById(forValue)\n                        } else {\n                            targetDomNode = domNode.querySelector('input')\n\n                            // 寻找 switch 节点\n                            if (!targetDomNode) targetDomNode = domNode.querySelector('wx-component[behavior=switch]')\n\n                            // 寻找 button 节点\n                            if (!targetDomNode) targetDomNode = domNode.querySelector('wx-component[behavior=button]')\n                        }\n\n                        if (!targetDomNode || !!targetDomNode.getAttribute('disabled')) return\n\n                        // 找到了目标节点\n                        if (targetDomNode.tagName === 'INPUT') {\n                            if (_.checkEventAccessDomNode(evt, targetDomNode, domNode)) return\n\n                            const type = targetDomNode.type\n                            if (type === 'radio') {\n                                targetDomNode.setAttribute('checked', true)\n                                const name = targetDomNode.name\n                                if (name) {\n                                    const otherDomNodes = window.document.querySelectorAll(`input[name=${name}]`) || []\n                                    for (const otherDomNode of otherDomNodes) {\n                                        if (otherDomNode.type === 'radio' && otherDomNode !== targetDomNode) {\n                                            otherDomNode.setAttribute('checked', false)\n                                        }\n                                    }\n                                    this.callSimpleEvent('change', {detail: {value: targetDomNode.value}}, targetDomNode)\n                                } else {\n                                    const target = {dataset: {pageId: this.pageId, privateNodeId: targetDomNode.$$nodeId}}\n                                    this.callEvent('$$radioChange', {\n                                        target,\n                                        currentTarget: target,\n                                        timeStamp: window.performance.now(),\n                                        touches: evt.touches,\n                                        changedTouches: evt.changedTouches,\n                                        detail: {},\n                                    })\n                                }\n                            } else if (type === 'checkbox') {\n                                const name = targetDomNode.name\n                                targetDomNode.setAttribute('checked', !targetDomNode.checked)\n                                if (name) {\n                                    this.callSimpleEvent('change', {detail: {value: targetDomNode.checked ? [targetDomNode.value] : []}}, targetDomNode)\n                                } else {\n                                    const target = {dataset: {pageId: this.pageId, privateNodeId: targetDomNode.$$nodeId}}\n                                    this.callEvent('$$checkboxChange', {\n                                        target,\n                                        currentTarget: target,\n                                        timeStamp: window.performance.now(),\n                                        touches: evt.touches,\n                                        changedTouches: evt.changedTouches,\n                                        detail: {},\n                                    })\n                                }\n                            } else {\n                                targetDomNode.focus()\n                            }\n                        } else if (targetDomNode.tagName === 'WX-COMPONENT') {\n                            if (_.checkEventAccessDomNode(evt, targetDomNode, domNode)) return\n\n                            const behavior = targetDomNode.behavior\n                            if (behavior === 'switch') {\n                                const checked = !targetDomNode.getAttribute('checked')\n                                targetDomNode.setAttribute('checked', checked)\n                                this.callSimpleEvent('change', {detail: {value: checked}}, targetDomNode)\n                            } else if (behavior === 'button') {\n                                const target = {dataset: {pageId: this.pageId, privateNodeId: targetDomNode.$$nodeId}}\n                                const clickEvt = {\n                                    target,\n                                    currentTarget: target,\n                                    timeStamp: window.performance.now(),\n                                    touches: evt.touches,\n                                    changedTouches: evt.changedTouches,\n                                    detail: {},\n                                }\n                                this.callEvent('click', clickEvt, {button: 0}) // 默认左键\n\n                                const config = cache.getConfig()\n                                if (!config.runtime.disableMpEvent) this.callEvent('tap', clickEvt)\n                            }\n                        }\n                    } else if ((domNode.tagName === 'BUTTON' || (domNode.tagName === 'WX-COMPONENT' && domNode.behavior === 'button')) && evt.type === 'click' && !isCapture) {\n                        // 处理 button 点击\n                        const type = domNode.tagName === 'BUTTON' ? domNode.getAttribute('type') : domNode.getAttribute('form-type')\n                        const formAttr = domNode.getAttribute('form')\n                        const form = formAttr ? window.document.getElementById(formAttr) : _.findParentNode(domNode, 'FORM')\n\n                        if (!form) return\n                        if (type !== 'submit' && type !== 'reset') return\n\n                        const inputList = form.querySelectorAll('input[name]')\n                        const textareaList = form.querySelectorAll('textarea[name]')\n                        const switchList = form.querySelectorAll('wx-component[behavior=switch]').filter(item => !!item.getAttribute('name'))\n                        const sliderList = form.querySelectorAll('wx-component[behavior=slider]').filter(item => !!item.getAttribute('name'))\n                        const pickerList = form.querySelectorAll('wx-component[behavior=picker]').filter(item => !!item.getAttribute('name'))\n                        const pickerViewList = form.querySelectorAll('wx-component[behavior=picker-view]').filter(item => !!item.getAttribute('name'))\n\n                        if (type === 'submit') {\n                            const formData = {}\n                            if (inputList.length) {\n                                inputList.forEach(item => {\n                                    if (item.type === 'radio') {\n                                        if (item.checked) formData[item.name] = item.value\n                                    } else if (item.type === 'checkbox') {\n                                        formData[item.name] = formData[item.name] || []\n                                        if (item.checked) formData[item.name].push(item.value)\n                                    } else {\n                                        formData[item.name] = item.value\n                                    }\n                                })\n                            }\n                            if (textareaList.length) textareaList.forEach(item => formData[item.getAttribute('name')] = item.value)\n                            if (switchList.length) switchList.forEach(item => formData[item.getAttribute('name')] = !!item.getAttribute('checked'))\n                            if (sliderList.length) sliderList.forEach(item => formData[item.getAttribute('name')] = +item.getAttribute('value') || 0)\n                            if (pickerList.length || pickerViewList.length) {\n                                [].concat(pickerList, pickerViewList).forEach(item => {\n                                    let value = item.getAttribute('value')\n                                    if (typeof value === 'string') {\n                                        try {\n                                            value = JSON.parse(value)\n                                        } catch (err) {\n                                            // ignore\n                                        }\n                                    }\n                                    formData[item.getAttribute('name')] = value\n                                })\n                            }\n\n                            const detail = {value: formData}\n                            if (form._formId) {\n                                detail.formId = form._formId\n                                form._formId = null\n                            }\n                            this.callSimpleEvent('submit', {detail, extra: {$$from: 'button'}}, form)\n                        } else if (type === 'reset') {\n                            if (inputList.length) {\n                                inputList.forEach(item => {\n                                    if (item.type === 'radio') {\n                                        item.setAttribute('checked', false)\n                                    } else if (item.type === 'checkbox') {\n                                        item.setAttribute('checked', false)\n                                    } else {\n                                        item.setAttribute('value', '')\n                                    }\n                                })\n                            }\n                            if (textareaList.length) textareaList.forEach(item => item.setAttribute('value', ''))\n                            if (switchList.length) switchList.forEach(item => item.setAttribute('checked', undefined))\n                            if (sliderList.length) sliderList.forEach(item => item.setAttribute('value', undefined))\n                            if (pickerList.length) pickerList.forEach(item => item.setAttribute('value', undefined))\n                            if (pickerViewList.length) pickerViewList.forEach(item => item.setAttribute('value', undefined))\n\n                            this.callSimpleEvent('reset', {extra: {$$from: 'button'}}, form)\n                        }\n                    }\n                }, 0)\n\n                // 补充 tap 事件\n                if (eventName === 'touchend' && domNode._needCallTap) {\n                    // 需要手动触发 tap\n                    domNode._needCallTap = false\n                    const evt = {\n                        target: miniprogramEvent.target,\n                        currentTarget: miniprogramEvent.currentTarget,\n                    }\n                    this.callEvent('click', evt, {button: 0}) // 默认左键\n\n                    const config = cache.getConfig()\n                    if (!config.runtime.disableMpEvent) this.callEvent('tap', evt)\n                }\n            })\n\n            // 对齐小程序实现，如果 longpress 没有触发，需要在 touchend 时触发 tap 事件\n            if (eventName === 'longpress') {\n                let needCallTap = true\n                let parentNode = domNode.parentNode\n\n                while (parentNode) {\n                    if (parentNode.$$hasEventHandler(eventName) || typeof parentNode[`on${eventName}`] === 'function') {\n                        needCallTap = false\n                    }\n                    parentNode = parentNode.parentNode\n                }\n\n                domNode._needCallTap = needCallTap\n            } else if (eventName === 'touchmove' && domNode._needCallTap) {\n                domNode._needCallTap = false\n            }\n        },\n\n        /**\n         * 监听节点事件\n         */\n        onTouchStart(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchstart', evt)\n            }\n        },\n\n        onTouchMove(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchmove', evt)\n            }\n        },\n\n        onTouchEnd(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchend', evt)\n            }\n        },\n\n        onTouchCancel(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchcancel', evt)\n            }\n        },\n\n        onTap(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('click', evt, {button: 0}) // 默认左键\n\n                const config = cache.getConfig()\n                if (!config.runtime.disableMpEvent) this.callEvent('tap', evt)\n            }\n        },\n\n        onLongPress(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                const config = cache.getConfig()\n                if (!config.runtime.disableMpEvent) this.callEvent('longpress', evt)\n            }\n        },\n\n        /**\n         * 图片相关事件\n         */\n        onImgLoad(evt) {\n            this.callSingleEvent('load', evt)\n        },\n\n        onImgError(evt) {\n            this.callSingleEvent('error', evt)\n        },\n\n        /**\n         * capture 相关事件，wx-capture 的事件不走仿造事件捕获冒泡系统，单独触发\n         */\n        onCaptureTouchStart(evt) {\n            this.callSingleEvent('touchstart', evt)\n        },\n\n        onCaptureTouchMove(evt) {\n            this.callSingleEvent('touchmove', evt)\n        },\n\n        onCaptureTouchEnd(evt) {\n            this.callSingleEvent('touchend', evt)\n        },\n\n        onCaptureTouchCancel(evt) {\n            this.callSingleEvent('touchcancel', evt)\n        },\n\n        onCaptureTap(evt) {\n            this.callSingleEvent('click', evt)\n\n            const config = cache.getConfig()\n            if (!config.runtime.disableMpEvent) this.callSingleEvent('tap', evt)\n        },\n\n        onCaptureLongPress(evt) {\n            const config = cache.getConfig()\n            if (!config.runtime.disableMpEvent) this.callSingleEvent('longpress', evt)\n        },\n\n        /**\n         * 动画相关事件\n         */\n        onTransitionEnd(evt) {\n            this.callEvent('transitionend', evt)\n        },\n\n        onAnimationStart(evt) {\n            this.callEvent('animationstart', evt)\n        },\n\n        onAnimationIteration(evt) {\n            this.callEvent('animationiteration', evt)\n        },\n\n        onAnimationEnd(evt) {\n            this.callEvent('animationend', evt)\n        },\n\n        /**\n         * 从小程序事件对象中获取 domNode\n         */\n        getDomNodeFromEvt(evt) {\n            if (!evt) return\n            const pageId = this.pageId\n            const originNodeId = evt.currentTarget && evt.currentTarget.dataset.privateNodeId || this.nodeId\n            return cache.getNode(pageId, originNodeId)\n        },\n\n        ...wxCompHandles,\n    }\n})\n","const mp = require('miniprogram-render')\r\nconst component = require('./component')\r\n\r\nconst {\r\n    cache,\r\n    tool,\r\n} = mp.$$adapter\r\n\r\nconst {\r\n    wxCompData,\r\n    wxCompNameMap,\r\n    wxSubComponentMap,\r\n} = component\r\n\r\nconst ELEMENT_DIFF_KEYS = [\r\n    'nodeId', 'pageId', 'id', 'className', 'style', // 通用字段\r\n    'isImage', 'src', 'mode', 'webp', 'lazyLoad', 'showMenuByLongpress', // image\r\n    'useTemplate', 'extra', 'compName', // template 渲染\r\n    'isLeaf', 'content', // leaf\r\n    'isSimple' // 普通节点\r\n]\r\nconst TEXT_NODE_DIFF_KEYS = ['nodeId', 'pageId', 'content']\r\nconst NEET_SPLIT_CLASS_STYLE_FROM_CUSTOM_ELEMENT = ['WX-COMPONENT', 'WX-CUSTOM-COMPONENT'] // 需要分离 class 和 style 的节点\r\nconst RELATION_PARENT = ['swiper', 'movable-area', 'picker-view']\r\nconst RELATION_CHILD = ['swiper-item', 'movable-view', 'picker-view-column']\r\nconst NEET_RENDER_TO_CUSTOM_ELEMENT = ['IFRAME', ...NEET_SPLIT_CLASS_STYLE_FROM_CUSTOM_ELEMENT] // 必须渲染成自定义组件的节点\r\nconst USE_TEMPLATE = ['cover-image', 'cover-view', 'match-media', 'movable-area', 'movable-view', 'page-container', 'scroll-view', 'swiper', 'swiper-item', 'icon', 'progress', 'rich-text', 'text', 'button', 'editor', 'form', 'INPUT', 'picker', 'SELECT', 'picker-view', 'picker-view-column', 'slider', 'switch', 'TEXTAREA', 'navigator', 'camera', 'image', 'live-player', 'live-pusher', 'VIDEO', 'voip-room', 'map', 'CANVAS', 'ad', 'ad-custom', 'official-account', 'open-data', 'web-view', 'capture', 'catch', 'animation', 'not-support', 'WX-CUSTOM-COMPONENT'] // 使用 template 渲染\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\n\r\n/**\r\n * 过滤子节点，只获取儿子节点\r\n */\r\nfunction filterNodes(domNode, level, component) {\r\n    let childNodes = domNode.childNodes || []\r\n\r\n    if (typeof childNodes.map !== 'function') return []\r\n\r\n    if (domNode.tagName === 'SELECT') {\r\n        // select 标签只渲染和 select 值相同的 option\r\n        const index = childNodes.findIndex(childNode => childNode.value === domNode.value)\r\n        childNodes = index !== -1 ? [childNodes[index]] : []\r\n    }\r\n\r\n    return childNodes.map(child => {\r\n        const domInfo = child.$$domInfo\r\n\r\n        if (domInfo.type !== 'element' && domInfo.type !== 'text') return\r\n        if (domInfo.slot) return\r\n\r\n        // 挂载该节点所处的自定义组件实例\r\n        child._wxComponent = component\r\n\r\n        domInfo.className = domInfo.type === 'element' ? `h5-${domInfo.tagName} node-${domInfo.nodeId} ${domInfo.className || ''}` : '' // 增加默认 class\r\n        domInfo.domNode = child\r\n\r\n        // 特殊节点\r\n        if (NEET_SPLIT_CLASS_STYLE_FROM_CUSTOM_ELEMENT.indexOf(child.tagName) >= 0) {\r\n            if (domInfo.tagName === 'wx-component' && RELATION_CHILD.indexOf(child.behavior) !== -1) {\r\n                // 特殊内置组件，强制作为某内置组件的子组件，需要直接在当前模板渲染\r\n                domInfo.compName = child.behavior\r\n                domInfo.extra = {hidden: child.getAttribute('hidden') || false}\r\n\r\n                // 补充该内置组件的属性\r\n                const {properties} = wxSubComponentMap[child.behavior] || {}\r\n                if (properties && properties.length) {\r\n                    properties.forEach(({name, get, canBeUserChanged = false}) => {\r\n                        const newValue = get(child)\r\n                        domInfo.extra[name] = newValue\r\n\r\n                        if (canBeUserChanged) {\r\n                            // 可被用户行为改变的属性，除了 data 外，还需要对比监听到上次用户行为修改的值\r\n                            const oldValues = child._oldValues\r\n                            if (oldValues && !isEqual(newValue, oldValues[name], true)) domInfo.extra.forceUpdate = true // 避免被 diff 掉，需要强制更新\r\n                        }\r\n                    })\r\n                }\r\n\r\n                if (child.childNodes.length && level > 0) {\r\n                    domInfo.childNodes = filterNodes(child, level - 1, component)\r\n                }\r\n                return domInfo\r\n            }\r\n\r\n            // 不需要处理 id 和样式\r\n            domInfo.className = `h5-${domInfo.tagName} ${domInfo.tagName === 'wx-component' ? 'wx-' + child.behavior : ''}`\r\n            domInfo.id = ''\r\n            domInfo.style = ''\r\n        }\r\n\r\n        // 判断图片节点\r\n        domInfo.isImage = domInfo.type === 'element' && domInfo.tagName === 'img'\r\n        if (domInfo.isImage) {\r\n            domInfo.src = child.src ? tool.completeURL(child.src, '', true) : ''\r\n            domInfo.mode = child.getAttribute('mode') || ''\r\n            domInfo.webp = !!child.getAttribute('webp')\r\n            domInfo.lazyLoad = !!child.getAttribute('lazy-load')\r\n            domInfo.showMenuByLongpress = !!child.getAttribute('show-menu-by-longpress')\r\n        }\r\n\r\n        // 判断是否使用 template 渲染\r\n        let templateName = domInfo.tagName === 'wx-component' ? child.behavior : child.tagName\r\n        templateName = !mp.$$adapter.tool.isTagNameSupport(templateName) ? 'not-support' : templateName\r\n        domInfo.useTemplate = !domInfo.isImage && USE_TEMPLATE.indexOf(templateName) !== -1\r\n        if (domInfo.useTemplate) {\r\n            const wxCompName = wxCompNameMap[templateName]\r\n            const extra = {}\r\n\r\n            if (wxCompName) checkComponentAttr(wxCompName, child, extra, null, `h5-${domInfo.tagName} ${domInfo.tagName === 'wx-component' ? 'wx-' + child.behavior : ''}`)\r\n\r\n            extra.pageId = domInfo.pageId\r\n            extra.nodeId = domInfo.nodeId\r\n            extra.inCover = component.data.inCover\r\n            extra.hasChildren = !!child.childNodes.length\r\n            domInfo.extra = extra\r\n\r\n            // 给 template 中的特殊节点用\r\n            const relationIndex = RELATION_PARENT.indexOf(templateName)\r\n            if (relationIndex !== -1) {\r\n                const childNodes = (templateName === 'picker-view' ? filterNodes(child, 1) : filterNodes(child, 0)) || []\r\n                extra.childNodes = childNodes.filter(childNode => childNode.type === 'element' && childNode.compName === RELATION_CHILD[relationIndex]).map(childNode => {\r\n                    const copyChildNode = Object.assign({}, childNode)\r\n\r\n                    // picker-view-column 不支持监听自定义组件内子节点的变化，所以需要在当前自定义组件中渲染\r\n                    if (copyChildNode.childNodes) {\r\n                        // picker-view-column 的第一层子节点无法设置 style，不然会覆盖内置组件自己的样式\r\n                        copyChildNode.childNodes = copyChildNode.childNodes.map(grandchild => Object.assign({}, grandchild, {style: ''}))\r\n                    }\r\n\r\n                    return copyChildNode\r\n                })\r\n            }\r\n\r\n            // 地图如果存在 slot 节点，需要特殊处理\r\n            if (templateName === 'map' || templateName === 'scroll-view') {\r\n                const slots = child.childNodes.map(childNode => {\r\n                    const slotDomInfo = childNode.$$domInfo\r\n                    return {\r\n                        slot: slotDomInfo.slot,\r\n                        nodeId: slotDomInfo.nodeId,\r\n                        pageId: slotDomInfo.pageId,\r\n                        id: slotDomInfo.id,\r\n                        className: slotDomInfo.type === 'element' ? `h5-${slotDomInfo.tagName} node-${slotDomInfo.nodeId} ${slotDomInfo.className || ''}` : '',\r\n                        style: slotDomInfo.style,\r\n                    }\r\n                }).filter(slot => !!slot.slot)\r\n\r\n                extra.hasSlots = slots.length\r\n                extra.hasChildren = slots.length < child.childNodes.length\r\n                extra.slots = slots\r\n            }\r\n\r\n            // wx-catch 的 touch 事件会导致 tap 事件的触发，需要真正被绑定后再补充句柄\r\n            if (wxCompName === 'catch') {\r\n                extra.touchStart = child.$$hasEventHandler('touchstart') ? 'onTouchStart' : ''\r\n                extra.touchMove = child.$$hasEventHandler('touchmove') ? 'onTouchMove' : ''\r\n                extra.touchEnd = child.$$hasEventHandler('touchend') ? 'onTouchEnd' : ''\r\n                extra.touchCancel = child.$$hasEventHandler('touchcancel') ? 'onTouchCancel' : ''\r\n            }\r\n\r\n            // 1. text 组件存在 bug，其子节点无法使用自定义组件的方式来渲染，会存在无法更新的问题，需要基础库解决，故此处只渲染其文本内容\r\n            // 2. 不支持的节点，需要展示占位文本\r\n            if (wxCompName === 'text' || wxCompName === 'not-support') extra.content = child.textContent\r\n\r\n            // 第三方自定义组件\r\n            if (templateName === 'WX-CUSTOM-COMPONENT') {\r\n                extra.wxCompName = 'custom-component'\r\n                extra.wxCustomCompName = child.behavior\r\n            }\r\n        }\r\n\r\n        // 判断叶子节点\r\n        domInfo.isLeaf = !domInfo.isImage && !domInfo.useTemplate && domInfo.type === 'element' && !child.children.length && NEET_RENDER_TO_CUSTOM_ELEMENT.indexOf(child.tagName) === -1\r\n        if (domInfo.isLeaf) {\r\n            domInfo.content = child.childNodes.map(childNode => (childNode.$$domInfo.type === 'text' ? childNode.textContent : '')).join('')\r\n        }\r\n\r\n        // 判断可直接用 view 渲染的简单子节点\r\n        domInfo.isSimple = !domInfo.isImage && !domInfo.useTemplate && !domInfo.isLeaf && domInfo.type === 'element' && NEET_RENDER_TO_CUSTOM_ELEMENT.indexOf(child.tagName) === -1 && level > 0\r\n        if (domInfo.isSimple) {\r\n            domInfo.content = ''\r\n            domInfo.childNodes = filterNodes(child, level - 1, component)\r\n        }\r\n\r\n        return domInfo\r\n    }).filter(child => !!child)\r\n}\r\n\r\n/**\r\n * 判断两值是否相等\r\n */\r\nfunction isEqual(a, b, notStrict) {\r\n    if (typeof a === 'number' && typeof b === 'number') {\r\n        // 值为数值，需要考虑精度\r\n        return parseInt(a * 1000, 10) === parseInt(b * 1000, 10)\r\n    }\r\n\r\n    if (notStrict) {\r\n        // 非严格模式，当其中一方为 undefined，则直接判断另一方的真值\r\n        if (b === undefined) return !a\r\n        if (a === undefined) return !b\r\n    }\r\n\r\n    if (typeof a === 'object' && typeof b === 'object') {\r\n        if (a === null || b === null) return a === b\r\n\r\n        const isAArray = Array.isArray(a)\r\n        const isBArray = Array.isArray(b)\r\n        if (isAArray && isBArray) {\r\n            if (a.length !== b.length) return false\r\n            for (let i = 0, len = a.length; i < len; i++) {\r\n                if (!isEqual(a[i], b[i], notStrict)) return false\r\n            }\r\n            return true\r\n        } else if (!isBArray && !isBArray) {\r\n            const aKeys = Object.keys(a)\r\n            const bKeys = Object.keys(b)\r\n            if (aKeys.length !== bKeys.length) return false\r\n            for (const key of aKeys) {\r\n                if (!isEqual(a[key], b[key], notStrict)) return false\r\n            }\r\n            return true\r\n        }\r\n    }\r\n\r\n    return a === b\r\n}\r\n\r\n/**\r\n * 比较新旧子节点是否不同\r\n */\r\nfunction checkDiffChildNodes(newChildNodes, oldChildNodes) {\r\n    if (newChildNodes.length !== oldChildNodes.length) return true\r\n\r\n    for (let i = 0, len = newChildNodes.length; i < len; i++) {\r\n        const newChild = newChildNodes[i]\r\n        const oldChild = oldChildNodes[i]\r\n\r\n        if (newChild.type !== oldChild.type) return true\r\n\r\n        const keys = newChild.type === 'element' ? ELEMENT_DIFF_KEYS : TEXT_NODE_DIFF_KEYS\r\n\r\n        for (const key of keys) {\r\n            const newValue = newChild[key]\r\n            const oldValue = oldChild[key]\r\n            if (typeof newValue === 'object' && !Array.isArray(newValue)) {\r\n                // 值为对象，则判断对象顶层值是否有变化\r\n                if (typeof oldValue !== 'object') return true\r\n\r\n                // 需要强制更新\r\n                if (key === 'extra' && newValue && newValue.forceUpdate) {\r\n                    newValue.forceUpdate = false\r\n                    return true\r\n                }\r\n\r\n                const objectKeys = Object.keys(newValue)\r\n                const domNode = key === 'extra' ? newChild.domNode : null\r\n                const oldValues = domNode && domNode._oldValues\r\n                for (const objectKey of objectKeys) {\r\n                    let oldItemValue = oldValue[objectKey]\r\n\r\n                    if (oldValues && oldValues[objectKey] !== undefined) oldItemValue = oldValues[objectKey]\r\n                    if (!isEqual(newValue[objectKey], oldItemValue)) return true\r\n                }\r\n            } else if (!isEqual(newValue, oldValue)) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        // 比较孙子后辈节点\r\n        const newGrandChildNodes = newChild.childNodes || []\r\n        const oldGrandChildNodes = oldChild.childNodes || []\r\n        if (newGrandChildNodes.length || oldGrandChildNodes.length) {\r\n            if (checkDiffChildNodes(newGrandChildNodes, oldGrandChildNodes)) return true\r\n        }\r\n    }\r\n\r\n    return false\r\n}\r\n\r\n/**\r\n * 获取新旧子节点的更新数据\r\n */\r\nfunction getDiffChildNodes(newItem, oldItem, destData, prefix, isExtra, domNode) {\r\n    const newType = typeof newItem\r\n    const oldType = typeof oldItem\r\n    const countLimit = 100\r\n\r\n    if (newType === 'object' && oldType === 'object' && newItem !== null && oldItem !== null) {\r\n        const newIsArray = Array.isArray(newItem)\r\n        const oldIsArray = Array.isArray(oldItem)\r\n\r\n        if (newIsArray && oldIsArray) {\r\n            // 数组\r\n            if (newItem.length < oldItem.length) {\r\n                // 存在数据删除，无法应用 data path\r\n                destData[prefix] = newItem\r\n                if ((destData.count++) > countLimit) return true\r\n            } else {\r\n                for (let i = 0, len = newItem.length; i < len; i++) {\r\n                    const isInterrupt = getDiffChildNodes(newItem[i], oldItem[i], destData, `${prefix}[${i}]`)\r\n                    if (isInterrupt) return true\r\n                }\r\n            }\r\n        } else if (!newIsArray && !oldIsArray) {\r\n            // 对象\r\n            const newItemType = newItem.type\r\n            const oldItemType = oldItem.type\r\n            const keys = newItemType === 'element' ? ['childNodes'].concat(ELEMENT_DIFF_KEYS) : TEXT_NODE_DIFF_KEYS\r\n            const newIsNode = !isExtra && (newItemType === 'element' || newItemType === 'text')\r\n            const oldIsNode = !isExtra && (newItemType === 'element' || newItemType === 'text')\r\n\r\n            if (newIsNode && oldIsNode && newItemType === oldItemType) {\r\n                // 都是 element 节点，或者都是 text 节点\r\n                for (const key of keys) {\r\n                    const dataPath = `${prefix}.${key}`\r\n                    const currentDomNode = key === 'extra' ? cache.getNode(newItem.pageId, newItem.nodeId) : null\r\n                    const isInterrupt = getDiffChildNodes(newItem[key], oldItem[key], destData, dataPath, key === 'extra', currentDomNode)\r\n                    if (isInterrupt) return true\r\n                }\r\n            } else if (!newIsNode && !oldIsNode) {\r\n                // 普通对象\r\n                if (isExtra && newItem.forceUpdate) {\r\n                    // 需要强制更新的 extra 对象\r\n                    newItem.forceUpdate = false\r\n                    destData[prefix] = newItem\r\n                    if ((destData.count++) > countLimit) return true\r\n                } else {\r\n                    const newKeys = Object.keys(newItem)\r\n                    for (const key of newKeys) {\r\n                        const dataPath = `${prefix}.${key}`\r\n                        if (!hasOwnProperty.call(oldItem, key)) {\r\n                            // 新增的 key\r\n                            destData[dataPath] = newItem[key]\r\n                            if ((destData.count++) > countLimit) return true\r\n                        } else {\r\n                            let oldItemValue = oldItem[key]\r\n\r\n                            // 部分属性可能被手动修改，但是不会即时更新到 data 上，需要通过 _oldValues 判断\r\n                            if (domNode && domNode._oldValues && domNode._oldValues[key] !== undefined) oldItemValue = domNode._oldValues[key]\r\n\r\n                            const isInterrupt = getDiffChildNodes(newItem[key], oldItemValue, destData, dataPath)\r\n                            if (isInterrupt) return true\r\n                        }\r\n                    }\r\n\r\n                    const oldKeys = Object.keys(oldItem)\r\n                    for (const key of oldKeys) {\r\n                        const dataPath = `${prefix}.${key}`\r\n                        if (!hasOwnProperty.call(newItem, key)) {\r\n                            // 删除的 key\r\n                            destData[dataPath] = null\r\n                            if ((destData.count++) > countLimit) return true\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // 节点类型不同\r\n                destData[prefix] = newItem\r\n                if ((destData.count++) > countLimit) return true\r\n            }\r\n        } else {\r\n            // 类型不同\r\n            destData[prefix] = newItem\r\n            if ((destData.count++) > countLimit) return true\r\n        }\r\n    } else if (!isEqual(newItem, oldItem)) {\r\n        // 值不等\r\n        newItem = newType === 'undefined' ? null : newItem\r\n        destData[prefix] = newItem\r\n        if ((destData.count++) > countLimit) return true\r\n    }\r\n}\r\n\r\n/**\r\n * 检查组件属性\r\n */\r\nfunction checkComponentAttr(name, domNode, destData, oldData, extraClass = '') {\r\n    const attrs = wxCompData[name]\r\n\r\n    destData.wxCompName = name\r\n\r\n    if (attrs && attrs.length) {\r\n        for (const {name, get, canBeUserChanged = false} of attrs) {\r\n            const newValue = get(domNode)\r\n            if (canBeUserChanged) {\r\n                // 可被用户行为改变的属性，除了 data 外，还需要对比监听到上次用户行为修改的值\r\n                const oldValues = domNode._oldValues\r\n                const isOldValuesChanged = oldValues ? !isEqual(newValue, oldValues[name], true) : false\r\n                if (!oldData || !isEqual(newValue, oldData[name]) || isOldValuesChanged) {\r\n                    destData[name] = newValue\r\n                    if (isOldValuesChanged && domNode._oldValues) {\r\n                        domNode._oldValues[name] = newValue\r\n                    }\r\n                    if (isOldValuesChanged) destData.forceUpdate = true // 避免被 diff 掉，需要强制更新\r\n                }\r\n            } else if (!oldData || !isEqual(newValue, oldData[name])) {\r\n                // 对比 data\r\n                destData[name] = newValue\r\n            }\r\n        }\r\n    }\r\n\r\n    // 补充 id、class、style 和 hidden\r\n    const newId = domNode.id\r\n    if (!oldData || oldData.id !== newId) destData.id = newId\r\n    const newClass = `${extraClass} wx-comp-${name} node-${domNode.$$nodeId} ${domNode.className || ''}`\r\n    if (!oldData || oldData.className !== newClass) destData.className = newClass\r\n    const newStyle = domNode.style.cssText\r\n    if (!oldData || oldData.style !== newStyle) destData.style = newStyle\r\n    const newHidden = domNode.getAttribute('hidden') || false\r\n    if (!oldData || oldData.hidden !== newHidden) destData.hidden = newHidden\r\n}\r\n\r\n/**\r\n * 处理不需要渲染成自定义组件的节点\r\n */\r\nfunction dealWithLeafAndSimple(childNodes, onChildNodesUpdate) {\r\n    if (childNodes && childNodes.length) {\r\n        childNodes = childNodes.map(originChildNode => {\r\n            const childNode = Object.assign({}, originChildNode)\r\n\r\n            childNode.domNode.$$clearEvent('$$childNodesUpdate', {$$namespace: 'child'})\r\n            if (childNode.isImage || childNode.isLeaf || childNode.isSimple || childNode.useTemplate) {\r\n                childNode.domNode.addEventListener('$$childNodesUpdate', onChildNodesUpdate, {$$namespace: 'child'})\r\n            }\r\n\r\n            delete childNode.domNode\r\n            childNode.childNodes = dealWithLeafAndSimple(childNode.childNodes, onChildNodesUpdate) || []\r\n            if (childNode.extra && childNode.extra.childNodes) {\r\n                // picker-view、movable-area、swiper 会有子节点挂在 extra.childNodes 中\r\n                childNode.extra.childNodes = dealWithLeafAndSimple(childNode.extra.childNodes, onChildNodesUpdate) || []\r\n            }\r\n\r\n            return childNode\r\n        })\r\n    }\r\n\r\n    return childNodes\r\n}\r\n\r\n/**\r\n * 检查事件是否经过某个节点\r\n */\r\nfunction checkEventAccessDomNode(evt, domNode, dest) {\r\n    dest = dest || domNode.ownerDocument.body\r\n    let target = evt.target\r\n\r\n    // 该节点就是目标节点\r\n    if (domNode === dest) return true\r\n\r\n    while (target && target !== dest) {\r\n        if (target === domNode) return true\r\n        target = target.parentNode\r\n    }\r\n\r\n    return false\r\n}\r\n\r\n/**\r\n * 查找最近的符合条件的祖先节点\r\n */\r\nfunction findParentNode(domNode, tagName) {\r\n    const checkParentNode = (parentNode, tagName) => {\r\n        if (!parentNode) return false\r\n        if (parentNode.tagName === tagName) return true\r\n        if (parentNode.tagName === 'WX-COMPONENT' && parentNode.behavior === tagName.toLowerCase()) return true\r\n\r\n        return false\r\n    }\r\n    let parentNode = domNode.parentNode\r\n\r\n    if (checkParentNode(parentNode, tagName)) return parentNode\r\n    while (parentNode && parentNode.tagName !== tagName) {\r\n        parentNode = parentNode.parentNode\r\n        if (checkParentNode(parentNode, tagName)) return parentNode\r\n    }\r\n\r\n    return null\r\n}\r\n\r\n/**\r\n * 判断基础库版本\r\n */\r\nfunction compareVersion(v1, v2) {\r\n    v1 = v1.split('.')\r\n    v2 = v2.split('.')\r\n    const len = Math.max(v1.length, v2.length)\r\n\r\n    while (v1.length < len) {\r\n        v1.push('0')\r\n    }\r\n    while (v2.length < len) {\r\n        v2.push('0')\r\n    }\r\n\r\n    for (let i = 0; i < len; i++) {\r\n        const num1 = parseInt(v1[i], 10)\r\n        const num2 = parseInt(v2[i], 10)\r\n\r\n        if (num1 > num2) {\r\n            return 1\r\n        } else if (num1 < num2) {\r\n            return -1\r\n        }\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\n/**\r\n * setData 封装\r\n */\r\nfunction setData(instance, data) {\r\n    if (tool.setData) tool.setData(instance, data)\r\n    else instance.setData(data)\r\n}\r\n\r\nmodule.exports = {\r\n    USE_TEMPLATE,\r\n    filterNodes,\r\n    checkDiffChildNodes,\r\n    getDiffChildNodes,\r\n    checkComponentAttr,\r\n    dealWithLeafAndSimple,\r\n    checkEventAccessDomNode,\r\n    findParentNode,\r\n    compareVersion,\r\n    setData,\r\n}\r\n"],"sourceRoot":""}